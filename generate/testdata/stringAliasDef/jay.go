// Code generated by Jay; DO NOT EDIT. Tool documentation available at: https://github.com/speedyhoon/jay

package main

import "github.com/speedyhoon/jay"

func (o *One) MarshalJ() (b []byte) {
	l0 := len(o.One)
	b = make([]byte, 1+l0)
	b[0] = byte(l0)
	copy(b[1:], o.One)
	return
}

func (o *One) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 1 {
		return jay.ErrUnexpectedEOB
	}
	l0 := int(b[0])
	if l < 1+l0 {
		return jay.ErrUnexpectedEOB
	}
	o.One = str(b[1:])
	return nil
}

func (t *Two) MarshalJ() (b []byte) {
	l0, l1 := len(t.One), len(t.Two)
	b = make([]byte, 2+l0+l1)
	b[0], b[1] = byte(l0), byte(l1)
	at, end := 2, 2+l0
	copy(b[at:end], t.One)
	copy(b[end:], t.Two)
	return
}

func (t *Two) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 2 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1 := int(b[0]), int(b[1])
	if l < 2+l0+l1 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 2, 2+l0
	t.One = str(b[at:end])
	t.Two = str(b[end:])
	return nil
}

func (t *Three) MarshalJ() (b []byte) {
	l0, l1, l2 := len(t.One), len(t.Two), len(t.Three)
	b = make([]byte, 3+l0+l1+l2)
	b[0], b[1], b[2] = byte(l0), byte(l1), byte(l2)
	at, end := 3, 3+l0
	copy(b[at:end], t.One)
	at, end = end, end+l1
	copy(b[at:end], t.Two)
	copy(b[end:], t.Three)
	return
}

func (t *Three) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 3 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2 := int(b[0]), int(b[1]), int(b[2])
	if l < 3+l0+l1+l2 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 3, 3+l0
	t.One = str(b[at:end])
	at, end = end, end+l1
	t.Two = str(b[at:end])
	t.Three = str(b[end:])
	return nil
}

func (f *Four) MarshalJ() (b []byte) {
	l0, l1, l2, l3 := len(f.One), len(f.Two), len(f.Three), len(f.Four)
	b = make([]byte, 4+l0+l1+l2+l3)
	b[0], b[1], b[2], b[3] = byte(l0), byte(l1), byte(l2), byte(l3)
	at, end := 4, 4+l0
	copy(b[at:end], f.One)
	at, end = end, end+l1
	copy(b[at:end], f.Two)
	at, end = end, end+l2
	copy(b[at:end], f.Three)
	copy(b[end:], f.Four)
	return
}

func (f *Four) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 4 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3 := int(b[0]), int(b[1]), int(b[2]), int(b[3])
	if l < 4+l0+l1+l2+l3 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 4, 4+l0
	f.One = str(b[at:end])
	at, end = end, end+l1
	f.Two = str(b[at:end])
	at, end = end, end+l2
	f.Three = str(b[at:end])
	f.Four = str(b[end:])
	return nil
}

func (f *Five) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4 := len(f.One), len(f.Two), len(f.Three), len(f.Four), len(f.Five)
	b = make([]byte, 5+l0+l1+l2+l3+l4)
	b[0], b[1], b[2], b[3], b[4] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4)
	at, end := 5, 5+l0
	copy(b[at:end], f.One)
	at, end = end, end+l1
	copy(b[at:end], f.Two)
	at, end = end, end+l2
	copy(b[at:end], f.Three)
	at, end = end, end+l3
	copy(b[at:end], f.Four)
	copy(b[end:], f.Five)
	return
}

func (f *Five) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 5 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4])
	if l < 5+l0+l1+l2+l3+l4 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 5, 5+l0
	f.One = str(b[at:end])
	at, end = end, end+l1
	f.Two = str(b[at:end])
	at, end = end, end+l2
	f.Three = str(b[at:end])
	at, end = end, end+l3
	f.Four = str(b[at:end])
	f.Five = str(b[end:])
	return nil
}

func (s *Six) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5 := len(s.One), len(s.Two), len(s.Three), len(s.Four), len(s.Five), len(s.Six)
	b = make([]byte, 6+l0+l1+l2+l3+l4+l5)
	b[0], b[1], b[2], b[3], b[4], b[5] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5)
	at, end := 6, 6+l0
	copy(b[at:end], s.One)
	at, end = end, end+l1
	copy(b[at:end], s.Two)
	at, end = end, end+l2
	copy(b[at:end], s.Three)
	at, end = end, end+l3
	copy(b[at:end], s.Four)
	at, end = end, end+l4
	copy(b[at:end], s.Five)
	copy(b[end:], s.Six)
	return
}

func (s *Six) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 6 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5])
	if l < 6+l0+l1+l2+l3+l4+l5 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 6, 6+l0
	s.One = str(b[at:end])
	at, end = end, end+l1
	s.Two = str(b[at:end])
	at, end = end, end+l2
	s.Three = str(b[at:end])
	at, end = end, end+l3
	s.Four = str(b[at:end])
	at, end = end, end+l4
	s.Five = str(b[at:end])
	s.Six = str(b[end:])
	return nil
}

func (s *Seven) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6 := len(s.One), len(s.Two), len(s.Three), len(s.Four), len(s.Five), len(s.Six), len(s.Seven)
	b = make([]byte, 7+l0+l1+l2+l3+l4+l5+l6)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6)
	at, end := 7, 7+l0
	copy(b[at:end], s.One)
	at, end = end, end+l1
	copy(b[at:end], s.Two)
	at, end = end, end+l2
	copy(b[at:end], s.Three)
	at, end = end, end+l3
	copy(b[at:end], s.Four)
	at, end = end, end+l4
	copy(b[at:end], s.Five)
	at, end = end, end+l5
	copy(b[at:end], s.Six)
	copy(b[end:], s.Seven)
	return
}

func (s *Seven) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 7 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6])
	if l < 7+l0+l1+l2+l3+l4+l5+l6 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 7, 7+l0
	s.One = str(b[at:end])
	at, end = end, end+l1
	s.Two = str(b[at:end])
	at, end = end, end+l2
	s.Three = str(b[at:end])
	at, end = end, end+l3
	s.Four = str(b[at:end])
	at, end = end, end+l4
	s.Five = str(b[at:end])
	at, end = end, end+l5
	s.Six = str(b[at:end])
	s.Seven = str(b[end:])
	return nil
}

func (e *Eight) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7 := len(e.One), len(e.Two), len(e.Three), len(e.Four), len(e.Five), len(e.Six), len(e.Seven), len(e.Eight)
	b = make([]byte, 8+l0+l1+l2+l3+l4+l5+l6+l7)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6), byte(l7)
	at, end := 8, 8+l0
	copy(b[at:end], e.One)
	at, end = end, end+l1
	copy(b[at:end], e.Two)
	at, end = end, end+l2
	copy(b[at:end], e.Three)
	at, end = end, end+l3
	copy(b[at:end], e.Four)
	at, end = end, end+l4
	copy(b[at:end], e.Five)
	at, end = end, end+l5
	copy(b[at:end], e.Six)
	at, end = end, end+l6
	copy(b[at:end], e.Seven)
	copy(b[end:], e.Eight)
	return
}

func (e *Eight) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 8 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6, l7 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6]), int(b[7])
	if l < 8+l0+l1+l2+l3+l4+l5+l6+l7 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 8, 8+l0
	e.One = str(b[at:end])
	at, end = end, end+l1
	e.Two = str(b[at:end])
	at, end = end, end+l2
	e.Three = str(b[at:end])
	at, end = end, end+l3
	e.Four = str(b[at:end])
	at, end = end, end+l4
	e.Five = str(b[at:end])
	at, end = end, end+l5
	e.Six = str(b[at:end])
	at, end = end, end+l6
	e.Seven = str(b[at:end])
	e.Eight = str(b[end:])
	return nil
}

func (n *Nine) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8 := len(n.One), len(n.Two), len(n.Three), len(n.Four), len(n.Five), len(n.Six), len(n.Seven), len(n.Eight), len(n.Nine)
	b = make([]byte, 9+l0+l1+l2+l3+l4+l5+l6+l7+l8)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6), byte(l7), byte(l8)
	at, end := 9, 9+l0
	copy(b[at:end], n.One)
	at, end = end, end+l1
	copy(b[at:end], n.Two)
	at, end = end, end+l2
	copy(b[at:end], n.Three)
	at, end = end, end+l3
	copy(b[at:end], n.Four)
	at, end = end, end+l4
	copy(b[at:end], n.Five)
	at, end = end, end+l5
	copy(b[at:end], n.Six)
	at, end = end, end+l6
	copy(b[at:end], n.Seven)
	at, end = end, end+l7
	copy(b[at:end], n.Eight)
	copy(b[end:], n.Nine)
	return
}

func (n *Nine) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 9 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6, l7, l8 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6]), int(b[7]), int(b[8])
	if l < 9+l0+l1+l2+l3+l4+l5+l6+l7+l8 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 9, 9+l0
	n.One = str(b[at:end])
	at, end = end, end+l1
	n.Two = str(b[at:end])
	at, end = end, end+l2
	n.Three = str(b[at:end])
	at, end = end, end+l3
	n.Four = str(b[at:end])
	at, end = end, end+l4
	n.Five = str(b[at:end])
	at, end = end, end+l5
	n.Six = str(b[at:end])
	at, end = end, end+l6
	n.Seven = str(b[at:end])
	at, end = end, end+l7
	n.Eight = str(b[at:end])
	n.Nine = str(b[end:])
	return nil
}

func (t *Ten) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9 := len(t.One), len(t.Two), len(t.Three), len(t.Four), len(t.Five), len(t.Six), len(t.Seven), len(t.Eight), len(t.Nine), len(t.Ten)
	b = make([]byte, 10+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6), byte(l7), byte(l8), byte(l9)
	at, end := 10, 10+l0
	copy(b[at:end], t.One)
	at, end = end, end+l1
	copy(b[at:end], t.Two)
	at, end = end, end+l2
	copy(b[at:end], t.Three)
	at, end = end, end+l3
	copy(b[at:end], t.Four)
	at, end = end, end+l4
	copy(b[at:end], t.Five)
	at, end = end, end+l5
	copy(b[at:end], t.Six)
	at, end = end, end+l6
	copy(b[at:end], t.Seven)
	at, end = end, end+l7
	copy(b[at:end], t.Eight)
	at, end = end, end+l8
	copy(b[at:end], t.Nine)
	copy(b[end:], t.Ten)
	return
}

func (t *Ten) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 10 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6]), int(b[7]), int(b[8]), int(b[9])
	if l < 10+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 10, 10+l0
	t.One = str(b[at:end])
	at, end = end, end+l1
	t.Two = str(b[at:end])
	at, end = end, end+l2
	t.Three = str(b[at:end])
	at, end = end, end+l3
	t.Four = str(b[at:end])
	at, end = end, end+l4
	t.Five = str(b[at:end])
	at, end = end, end+l5
	t.Six = str(b[at:end])
	at, end = end, end+l6
	t.Seven = str(b[at:end])
	at, end = end, end+l7
	t.Eight = str(b[at:end])
	at, end = end, end+l8
	t.Nine = str(b[at:end])
	t.Ten = str(b[end:])
	return nil
}

func (e *Eleven) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10 := len(e.One), len(e.Two), len(e.Three), len(e.Four), len(e.Five), len(e.Six), len(e.Seven), len(e.Eight), len(e.Nine), len(e.Ten), len(e.Eleven)
	b = make([]byte, 11+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6), byte(l7), byte(l8), byte(l9), byte(l10)
	at, end := 11, 11+l0
	copy(b[at:end], e.One)
	at, end = end, end+l1
	copy(b[at:end], e.Two)
	at, end = end, end+l2
	copy(b[at:end], e.Three)
	at, end = end, end+l3
	copy(b[at:end], e.Four)
	at, end = end, end+l4
	copy(b[at:end], e.Five)
	at, end = end, end+l5
	copy(b[at:end], e.Six)
	at, end = end, end+l6
	copy(b[at:end], e.Seven)
	at, end = end, end+l7
	copy(b[at:end], e.Eight)
	at, end = end, end+l8
	copy(b[at:end], e.Nine)
	at, end = end, end+l9
	copy(b[at:end], e.Ten)
	copy(b[end:], e.Eleven)
	return
}

func (e *Eleven) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 11 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6]), int(b[7]), int(b[8]), int(b[9]), int(b[10])
	if l < 11+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 11, 11+l0
	e.One = str(b[at:end])
	at, end = end, end+l1
	e.Two = str(b[at:end])
	at, end = end, end+l2
	e.Three = str(b[at:end])
	at, end = end, end+l3
	e.Four = str(b[at:end])
	at, end = end, end+l4
	e.Five = str(b[at:end])
	at, end = end, end+l5
	e.Six = str(b[at:end])
	at, end = end, end+l6
	e.Seven = str(b[at:end])
	at, end = end, end+l7
	e.Eight = str(b[at:end])
	at, end = end, end+l8
	e.Nine = str(b[at:end])
	at, end = end, end+l9
	e.Ten = str(b[at:end])
	e.Eleven = str(b[end:])
	return nil
}

func (t *Twelve) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11 := len(t.One), len(t.Two), len(t.Three), len(t.Four), len(t.Five), len(t.Six), len(t.Seven), len(t.Eight), len(t.Nine), len(t.Ten), len(t.Eleven), len(t.Twelve)
	b = make([]byte, 12+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10], b[11] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6), byte(l7), byte(l8), byte(l9), byte(l10), byte(l11)
	at, end := 12, 12+l0
	copy(b[at:end], t.One)
	at, end = end, end+l1
	copy(b[at:end], t.Two)
	at, end = end, end+l2
	copy(b[at:end], t.Three)
	at, end = end, end+l3
	copy(b[at:end], t.Four)
	at, end = end, end+l4
	copy(b[at:end], t.Five)
	at, end = end, end+l5
	copy(b[at:end], t.Six)
	at, end = end, end+l6
	copy(b[at:end], t.Seven)
	at, end = end, end+l7
	copy(b[at:end], t.Eight)
	at, end = end, end+l8
	copy(b[at:end], t.Nine)
	at, end = end, end+l9
	copy(b[at:end], t.Ten)
	at, end = end, end+l10
	copy(b[at:end], t.Eleven)
	copy(b[end:], t.Twelve)
	return
}

func (t *Twelve) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 12 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6]), int(b[7]), int(b[8]), int(b[9]), int(b[10]), int(b[11])
	if l < 12+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 12, 12+l0
	t.One = str(b[at:end])
	at, end = end, end+l1
	t.Two = str(b[at:end])
	at, end = end, end+l2
	t.Three = str(b[at:end])
	at, end = end, end+l3
	t.Four = str(b[at:end])
	at, end = end, end+l4
	t.Five = str(b[at:end])
	at, end = end, end+l5
	t.Six = str(b[at:end])
	at, end = end, end+l6
	t.Seven = str(b[at:end])
	at, end = end, end+l7
	t.Eight = str(b[at:end])
	at, end = end, end+l8
	t.Nine = str(b[at:end])
	at, end = end, end+l9
	t.Ten = str(b[at:end])
	at, end = end, end+l10
	t.Eleven = str(b[at:end])
	t.Twelve = str(b[end:])
	return nil
}

func (t *Thirteen) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12 := len(t.One), len(t.Two), len(t.Three), len(t.Four), len(t.Five), len(t.Six), len(t.Seven), len(t.Eight), len(t.Nine), len(t.Ten), len(t.Eleven), len(t.Twelve), len(t.Thirteen)
	b = make([]byte, 13+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10], b[11], b[12] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6), byte(l7), byte(l8), byte(l9), byte(l10), byte(l11), byte(l12)
	at, end := 13, 13+l0
	copy(b[at:end], t.One)
	at, end = end, end+l1
	copy(b[at:end], t.Two)
	at, end = end, end+l2
	copy(b[at:end], t.Three)
	at, end = end, end+l3
	copy(b[at:end], t.Four)
	at, end = end, end+l4
	copy(b[at:end], t.Five)
	at, end = end, end+l5
	copy(b[at:end], t.Six)
	at, end = end, end+l6
	copy(b[at:end], t.Seven)
	at, end = end, end+l7
	copy(b[at:end], t.Eight)
	at, end = end, end+l8
	copy(b[at:end], t.Nine)
	at, end = end, end+l9
	copy(b[at:end], t.Ten)
	at, end = end, end+l10
	copy(b[at:end], t.Eleven)
	at, end = end, end+l11
	copy(b[at:end], t.Twelve)
	copy(b[end:], t.Thirteen)
	return
}

func (t *Thirteen) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 13 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6]), int(b[7]), int(b[8]), int(b[9]), int(b[10]), int(b[11]), int(b[12])
	if l < 13+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 13, 13+l0
	t.One = str(b[at:end])
	at, end = end, end+l1
	t.Two = str(b[at:end])
	at, end = end, end+l2
	t.Three = str(b[at:end])
	at, end = end, end+l3
	t.Four = str(b[at:end])
	at, end = end, end+l4
	t.Five = str(b[at:end])
	at, end = end, end+l5
	t.Six = str(b[at:end])
	at, end = end, end+l6
	t.Seven = str(b[at:end])
	at, end = end, end+l7
	t.Eight = str(b[at:end])
	at, end = end, end+l8
	t.Nine = str(b[at:end])
	at, end = end, end+l9
	t.Ten = str(b[at:end])
	at, end = end, end+l10
	t.Eleven = str(b[at:end])
	at, end = end, end+l11
	t.Twelve = str(b[at:end])
	t.Thirteen = str(b[end:])
	return nil
}

func (f *Fourteen) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13 := len(f.One), len(f.Two), len(f.Three), len(f.Four), len(f.Five), len(f.Six), len(f.Seven), len(f.Eight), len(f.Nine), len(f.Ten), len(f.Eleven), len(f.Twelve), len(f.Thirteen), len(f.Fourteen)
	b = make([]byte, 14+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10], b[11], b[12], b[13] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6), byte(l7), byte(l8), byte(l9), byte(l10), byte(l11), byte(l12), byte(l13)
	at, end := 14, 14+l0
	copy(b[at:end], f.One)
	at, end = end, end+l1
	copy(b[at:end], f.Two)
	at, end = end, end+l2
	copy(b[at:end], f.Three)
	at, end = end, end+l3
	copy(b[at:end], f.Four)
	at, end = end, end+l4
	copy(b[at:end], f.Five)
	at, end = end, end+l5
	copy(b[at:end], f.Six)
	at, end = end, end+l6
	copy(b[at:end], f.Seven)
	at, end = end, end+l7
	copy(b[at:end], f.Eight)
	at, end = end, end+l8
	copy(b[at:end], f.Nine)
	at, end = end, end+l9
	copy(b[at:end], f.Ten)
	at, end = end, end+l10
	copy(b[at:end], f.Eleven)
	at, end = end, end+l11
	copy(b[at:end], f.Twelve)
	at, end = end, end+l12
	copy(b[at:end], f.Thirteen)
	copy(b[end:], f.Fourteen)
	return
}

func (f *Fourteen) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 14 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6]), int(b[7]), int(b[8]), int(b[9]), int(b[10]), int(b[11]), int(b[12]), int(b[13])
	if l < 14+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 14, 14+l0
	f.One = str(b[at:end])
	at, end = end, end+l1
	f.Two = str(b[at:end])
	at, end = end, end+l2
	f.Three = str(b[at:end])
	at, end = end, end+l3
	f.Four = str(b[at:end])
	at, end = end, end+l4
	f.Five = str(b[at:end])
	at, end = end, end+l5
	f.Six = str(b[at:end])
	at, end = end, end+l6
	f.Seven = str(b[at:end])
	at, end = end, end+l7
	f.Eight = str(b[at:end])
	at, end = end, end+l8
	f.Nine = str(b[at:end])
	at, end = end, end+l9
	f.Ten = str(b[at:end])
	at, end = end, end+l10
	f.Eleven = str(b[at:end])
	at, end = end, end+l11
	f.Twelve = str(b[at:end])
	at, end = end, end+l12
	f.Thirteen = str(b[at:end])
	f.Fourteen = str(b[end:])
	return nil
}

func (f *Fifteen) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14 := len(f.One), len(f.Two), len(f.Three), len(f.Four), len(f.Five), len(f.Six), len(f.Seven), len(f.Eight), len(f.Nine), len(f.Ten), len(f.Eleven), len(f.Twelve), len(f.Thirteen), len(f.Fourteen), len(f.Fifteen)
	b = make([]byte, 15+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10], b[11], b[12], b[13], b[14] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6), byte(l7), byte(l8), byte(l9), byte(l10), byte(l11), byte(l12), byte(l13), byte(l14)
	at, end := 15, 15+l0
	copy(b[at:end], f.One)
	at, end = end, end+l1
	copy(b[at:end], f.Two)
	at, end = end, end+l2
	copy(b[at:end], f.Three)
	at, end = end, end+l3
	copy(b[at:end], f.Four)
	at, end = end, end+l4
	copy(b[at:end], f.Five)
	at, end = end, end+l5
	copy(b[at:end], f.Six)
	at, end = end, end+l6
	copy(b[at:end], f.Seven)
	at, end = end, end+l7
	copy(b[at:end], f.Eight)
	at, end = end, end+l8
	copy(b[at:end], f.Nine)
	at, end = end, end+l9
	copy(b[at:end], f.Ten)
	at, end = end, end+l10
	copy(b[at:end], f.Eleven)
	at, end = end, end+l11
	copy(b[at:end], f.Twelve)
	at, end = end, end+l12
	copy(b[at:end], f.Thirteen)
	at, end = end, end+l13
	copy(b[at:end], f.Fourteen)
	copy(b[end:], f.Fifteen)
	return
}

func (f *Fifteen) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 15 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6]), int(b[7]), int(b[8]), int(b[9]), int(b[10]), int(b[11]), int(b[12]), int(b[13]), int(b[14])
	if l < 15+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 15, 15+l0
	f.One = str(b[at:end])
	at, end = end, end+l1
	f.Two = str(b[at:end])
	at, end = end, end+l2
	f.Three = str(b[at:end])
	at, end = end, end+l3
	f.Four = str(b[at:end])
	at, end = end, end+l4
	f.Five = str(b[at:end])
	at, end = end, end+l5
	f.Six = str(b[at:end])
	at, end = end, end+l6
	f.Seven = str(b[at:end])
	at, end = end, end+l7
	f.Eight = str(b[at:end])
	at, end = end, end+l8
	f.Nine = str(b[at:end])
	at, end = end, end+l9
	f.Ten = str(b[at:end])
	at, end = end, end+l10
	f.Eleven = str(b[at:end])
	at, end = end, end+l11
	f.Twelve = str(b[at:end])
	at, end = end, end+l12
	f.Thirteen = str(b[at:end])
	at, end = end, end+l13
	f.Fourteen = str(b[at:end])
	f.Fifteen = str(b[end:])
	return nil
}

func (s *Sixteen) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15 := len(s.One), len(s.Two), len(s.Three), len(s.Four), len(s.Five), len(s.Six), len(s.Seven), len(s.Eight), len(s.Nine), len(s.Ten), len(s.Eleven), len(s.Twelve), len(s.Thirteen), len(s.Fourteen), len(s.Fifteen), len(s.Sixteen)
	b = make([]byte, 16+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10], b[11], b[12], b[13], b[14], b[15] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6), byte(l7), byte(l8), byte(l9), byte(l10), byte(l11), byte(l12), byte(l13), byte(l14), byte(l15)
	at, end := 16, 16+l0
	copy(b[at:end], s.One)
	at, end = end, end+l1
	copy(b[at:end], s.Two)
	at, end = end, end+l2
	copy(b[at:end], s.Three)
	at, end = end, end+l3
	copy(b[at:end], s.Four)
	at, end = end, end+l4
	copy(b[at:end], s.Five)
	at, end = end, end+l5
	copy(b[at:end], s.Six)
	at, end = end, end+l6
	copy(b[at:end], s.Seven)
	at, end = end, end+l7
	copy(b[at:end], s.Eight)
	at, end = end, end+l8
	copy(b[at:end], s.Nine)
	at, end = end, end+l9
	copy(b[at:end], s.Ten)
	at, end = end, end+l10
	copy(b[at:end], s.Eleven)
	at, end = end, end+l11
	copy(b[at:end], s.Twelve)
	at, end = end, end+l12
	copy(b[at:end], s.Thirteen)
	at, end = end, end+l13
	copy(b[at:end], s.Fourteen)
	at, end = end, end+l14
	copy(b[at:end], s.Fifteen)
	copy(b[end:], s.Sixteen)
	return
}

func (s *Sixteen) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 16 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6]), int(b[7]), int(b[8]), int(b[9]), int(b[10]), int(b[11]), int(b[12]), int(b[13]), int(b[14]), int(b[15])
	if l < 16+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 16, 16+l0
	s.One = str(b[at:end])
	at, end = end, end+l1
	s.Two = str(b[at:end])
	at, end = end, end+l2
	s.Three = str(b[at:end])
	at, end = end, end+l3
	s.Four = str(b[at:end])
	at, end = end, end+l4
	s.Five = str(b[at:end])
	at, end = end, end+l5
	s.Six = str(b[at:end])
	at, end = end, end+l6
	s.Seven = str(b[at:end])
	at, end = end, end+l7
	s.Eight = str(b[at:end])
	at, end = end, end+l8
	s.Nine = str(b[at:end])
	at, end = end, end+l9
	s.Ten = str(b[at:end])
	at, end = end, end+l10
	s.Eleven = str(b[at:end])
	at, end = end, end+l11
	s.Twelve = str(b[at:end])
	at, end = end, end+l12
	s.Thirteen = str(b[at:end])
	at, end = end, end+l13
	s.Fourteen = str(b[at:end])
	at, end = end, end+l14
	s.Fifteen = str(b[at:end])
	s.Sixteen = str(b[end:])
	return nil
}

func (s *Seventeen) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16 := len(s.One), len(s.Two), len(s.Three), len(s.Four), len(s.Five), len(s.Six), len(s.Seven), len(s.Eight), len(s.Nine), len(s.Ten), len(s.Eleven), len(s.Twelve), len(s.Thirteen), len(s.Fourteen), len(s.Fifteen), len(s.Sixteen), len(s.Seventeen)
	b = make([]byte, 17+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10], b[11], b[12], b[13], b[14], b[15], b[16] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6), byte(l7), byte(l8), byte(l9), byte(l10), byte(l11), byte(l12), byte(l13), byte(l14), byte(l15), byte(l16)
	at, end := 17, 17+l0
	copy(b[at:end], s.One)
	at, end = end, end+l1
	copy(b[at:end], s.Two)
	at, end = end, end+l2
	copy(b[at:end], s.Three)
	at, end = end, end+l3
	copy(b[at:end], s.Four)
	at, end = end, end+l4
	copy(b[at:end], s.Five)
	at, end = end, end+l5
	copy(b[at:end], s.Six)
	at, end = end, end+l6
	copy(b[at:end], s.Seven)
	at, end = end, end+l7
	copy(b[at:end], s.Eight)
	at, end = end, end+l8
	copy(b[at:end], s.Nine)
	at, end = end, end+l9
	copy(b[at:end], s.Ten)
	at, end = end, end+l10
	copy(b[at:end], s.Eleven)
	at, end = end, end+l11
	copy(b[at:end], s.Twelve)
	at, end = end, end+l12
	copy(b[at:end], s.Thirteen)
	at, end = end, end+l13
	copy(b[at:end], s.Fourteen)
	at, end = end, end+l14
	copy(b[at:end], s.Fifteen)
	at, end = end, end+l15
	copy(b[at:end], s.Sixteen)
	copy(b[end:], s.Seventeen)
	return
}

func (s *Seventeen) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 17 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6]), int(b[7]), int(b[8]), int(b[9]), int(b[10]), int(b[11]), int(b[12]), int(b[13]), int(b[14]), int(b[15]), int(b[16])
	if l < 17+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 17, 17+l0
	s.One = str(b[at:end])
	at, end = end, end+l1
	s.Two = str(b[at:end])
	at, end = end, end+l2
	s.Three = str(b[at:end])
	at, end = end, end+l3
	s.Four = str(b[at:end])
	at, end = end, end+l4
	s.Five = str(b[at:end])
	at, end = end, end+l5
	s.Six = str(b[at:end])
	at, end = end, end+l6
	s.Seven = str(b[at:end])
	at, end = end, end+l7
	s.Eight = str(b[at:end])
	at, end = end, end+l8
	s.Nine = str(b[at:end])
	at, end = end, end+l9
	s.Ten = str(b[at:end])
	at, end = end, end+l10
	s.Eleven = str(b[at:end])
	at, end = end, end+l11
	s.Twelve = str(b[at:end])
	at, end = end, end+l12
	s.Thirteen = str(b[at:end])
	at, end = end, end+l13
	s.Fourteen = str(b[at:end])
	at, end = end, end+l14
	s.Fifteen = str(b[at:end])
	at, end = end, end+l15
	s.Sixteen = str(b[at:end])
	s.Seventeen = str(b[end:])
	return nil
}

func (e *Eighteen) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17 := len(e.One), len(e.Two), len(e.Three), len(e.Four), len(e.Five), len(e.Six), len(e.Seven), len(e.Eight), len(e.Nine), len(e.Ten), len(e.Eleven), len(e.Twelve), len(e.Thirteen), len(e.Fourteen), len(e.Fifteen), len(e.Sixteen), len(e.Seventeen), len(e.Eighteen)
	b = make([]byte, 18+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10], b[11], b[12], b[13], b[14], b[15], b[16], b[17] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6), byte(l7), byte(l8), byte(l9), byte(l10), byte(l11), byte(l12), byte(l13), byte(l14), byte(l15), byte(l16), byte(l17)
	at, end := 18, 18+l0
	copy(b[at:end], e.One)
	at, end = end, end+l1
	copy(b[at:end], e.Two)
	at, end = end, end+l2
	copy(b[at:end], e.Three)
	at, end = end, end+l3
	copy(b[at:end], e.Four)
	at, end = end, end+l4
	copy(b[at:end], e.Five)
	at, end = end, end+l5
	copy(b[at:end], e.Six)
	at, end = end, end+l6
	copy(b[at:end], e.Seven)
	at, end = end, end+l7
	copy(b[at:end], e.Eight)
	at, end = end, end+l8
	copy(b[at:end], e.Nine)
	at, end = end, end+l9
	copy(b[at:end], e.Ten)
	at, end = end, end+l10
	copy(b[at:end], e.Eleven)
	at, end = end, end+l11
	copy(b[at:end], e.Twelve)
	at, end = end, end+l12
	copy(b[at:end], e.Thirteen)
	at, end = end, end+l13
	copy(b[at:end], e.Fourteen)
	at, end = end, end+l14
	copy(b[at:end], e.Fifteen)
	at, end = end, end+l15
	copy(b[at:end], e.Sixteen)
	at, end = end, end+l16
	copy(b[at:end], e.Seventeen)
	copy(b[end:], e.Eighteen)
	return
}

func (e *Eighteen) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 18 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6]), int(b[7]), int(b[8]), int(b[9]), int(b[10]), int(b[11]), int(b[12]), int(b[13]), int(b[14]), int(b[15]), int(b[16]), int(b[17])
	if l < 18+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 18, 18+l0
	e.One = str(b[at:end])
	at, end = end, end+l1
	e.Two = str(b[at:end])
	at, end = end, end+l2
	e.Three = str(b[at:end])
	at, end = end, end+l3
	e.Four = str(b[at:end])
	at, end = end, end+l4
	e.Five = str(b[at:end])
	at, end = end, end+l5
	e.Six = str(b[at:end])
	at, end = end, end+l6
	e.Seven = str(b[at:end])
	at, end = end, end+l7
	e.Eight = str(b[at:end])
	at, end = end, end+l8
	e.Nine = str(b[at:end])
	at, end = end, end+l9
	e.Ten = str(b[at:end])
	at, end = end, end+l10
	e.Eleven = str(b[at:end])
	at, end = end, end+l11
	e.Twelve = str(b[at:end])
	at, end = end, end+l12
	e.Thirteen = str(b[at:end])
	at, end = end, end+l13
	e.Fourteen = str(b[at:end])
	at, end = end, end+l14
	e.Fifteen = str(b[at:end])
	at, end = end, end+l15
	e.Sixteen = str(b[at:end])
	at, end = end, end+l16
	e.Seventeen = str(b[at:end])
	e.Eighteen = str(b[end:])
	return nil
}

func (n *Nineteen) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18 := len(n.One), len(n.Two), len(n.Three), len(n.Four), len(n.Five), len(n.Six), len(n.Seven), len(n.Eight), len(n.Nine), len(n.Ten), len(n.Eleven), len(n.Twelve), len(n.Thirteen), len(n.Fourteen), len(n.Fifteen), len(n.Sixteen), len(n.Seventeen), len(n.Eighteen), len(n.Nineteen)
	b = make([]byte, 19+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17+l18)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10], b[11], b[12], b[13], b[14], b[15], b[16], b[17], b[18] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6), byte(l7), byte(l8), byte(l9), byte(l10), byte(l11), byte(l12), byte(l13), byte(l14), byte(l15), byte(l16), byte(l17), byte(l18)
	at, end := 19, 19+l0
	copy(b[at:end], n.One)
	at, end = end, end+l1
	copy(b[at:end], n.Two)
	at, end = end, end+l2
	copy(b[at:end], n.Three)
	at, end = end, end+l3
	copy(b[at:end], n.Four)
	at, end = end, end+l4
	copy(b[at:end], n.Five)
	at, end = end, end+l5
	copy(b[at:end], n.Six)
	at, end = end, end+l6
	copy(b[at:end], n.Seven)
	at, end = end, end+l7
	copy(b[at:end], n.Eight)
	at, end = end, end+l8
	copy(b[at:end], n.Nine)
	at, end = end, end+l9
	copy(b[at:end], n.Ten)
	at, end = end, end+l10
	copy(b[at:end], n.Eleven)
	at, end = end, end+l11
	copy(b[at:end], n.Twelve)
	at, end = end, end+l12
	copy(b[at:end], n.Thirteen)
	at, end = end, end+l13
	copy(b[at:end], n.Fourteen)
	at, end = end, end+l14
	copy(b[at:end], n.Fifteen)
	at, end = end, end+l15
	copy(b[at:end], n.Sixteen)
	at, end = end, end+l16
	copy(b[at:end], n.Seventeen)
	at, end = end, end+l17
	copy(b[at:end], n.Eighteen)
	copy(b[end:], n.Nineteen)
	return
}

func (n *Nineteen) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 19 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6]), int(b[7]), int(b[8]), int(b[9]), int(b[10]), int(b[11]), int(b[12]), int(b[13]), int(b[14]), int(b[15]), int(b[16]), int(b[17]), int(b[18])
	if l < 19+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17+l18 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 19, 19+l0
	n.One = str(b[at:end])
	at, end = end, end+l1
	n.Two = str(b[at:end])
	at, end = end, end+l2
	n.Three = str(b[at:end])
	at, end = end, end+l3
	n.Four = str(b[at:end])
	at, end = end, end+l4
	n.Five = str(b[at:end])
	at, end = end, end+l5
	n.Six = str(b[at:end])
	at, end = end, end+l6
	n.Seven = str(b[at:end])
	at, end = end, end+l7
	n.Eight = str(b[at:end])
	at, end = end, end+l8
	n.Nine = str(b[at:end])
	at, end = end, end+l9
	n.Ten = str(b[at:end])
	at, end = end, end+l10
	n.Eleven = str(b[at:end])
	at, end = end, end+l11
	n.Twelve = str(b[at:end])
	at, end = end, end+l12
	n.Thirteen = str(b[at:end])
	at, end = end, end+l13
	n.Fourteen = str(b[at:end])
	at, end = end, end+l14
	n.Fifteen = str(b[at:end])
	at, end = end, end+l15
	n.Sixteen = str(b[at:end])
	at, end = end, end+l16
	n.Seventeen = str(b[at:end])
	at, end = end, end+l17
	n.Eighteen = str(b[at:end])
	n.Nineteen = str(b[end:])
	return nil
}

func (t *Twenty) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18, l19 := len(t.One), len(t.Two), len(t.Three), len(t.Four), len(t.Five), len(t.Six), len(t.Seven), len(t.Eight), len(t.Nine), len(t.Ten), len(t.Eleven), len(t.Twelve), len(t.Thirteen), len(t.Fourteen), len(t.Fifteen), len(t.Sixteen), len(t.Seventeen), len(t.Eighteen), len(t.Nineteen), len(t.Twenty)
	b = make([]byte, 20+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17+l18+l19)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10], b[11], b[12], b[13], b[14], b[15], b[16], b[17], b[18], b[19] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6), byte(l7), byte(l8), byte(l9), byte(l10), byte(l11), byte(l12), byte(l13), byte(l14), byte(l15), byte(l16), byte(l17), byte(l18), byte(l19)
	at, end := 20, 20+l0
	copy(b[at:end], t.One)
	at, end = end, end+l1
	copy(b[at:end], t.Two)
	at, end = end, end+l2
	copy(b[at:end], t.Three)
	at, end = end, end+l3
	copy(b[at:end], t.Four)
	at, end = end, end+l4
	copy(b[at:end], t.Five)
	at, end = end, end+l5
	copy(b[at:end], t.Six)
	at, end = end, end+l6
	copy(b[at:end], t.Seven)
	at, end = end, end+l7
	copy(b[at:end], t.Eight)
	at, end = end, end+l8
	copy(b[at:end], t.Nine)
	at, end = end, end+l9
	copy(b[at:end], t.Ten)
	at, end = end, end+l10
	copy(b[at:end], t.Eleven)
	at, end = end, end+l11
	copy(b[at:end], t.Twelve)
	at, end = end, end+l12
	copy(b[at:end], t.Thirteen)
	at, end = end, end+l13
	copy(b[at:end], t.Fourteen)
	at, end = end, end+l14
	copy(b[at:end], t.Fifteen)
	at, end = end, end+l15
	copy(b[at:end], t.Sixteen)
	at, end = end, end+l16
	copy(b[at:end], t.Seventeen)
	at, end = end, end+l17
	copy(b[at:end], t.Eighteen)
	at, end = end, end+l18
	copy(b[at:end], t.Nineteen)
	copy(b[end:], t.Twenty)
	return
}

func (t *Twenty) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 20 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18, l19 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6]), int(b[7]), int(b[8]), int(b[9]), int(b[10]), int(b[11]), int(b[12]), int(b[13]), int(b[14]), int(b[15]), int(b[16]), int(b[17]), int(b[18]), int(b[19])
	if l < 20+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17+l18+l19 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 20, 20+l0
	t.One = str(b[at:end])
	at, end = end, end+l1
	t.Two = str(b[at:end])
	at, end = end, end+l2
	t.Three = str(b[at:end])
	at, end = end, end+l3
	t.Four = str(b[at:end])
	at, end = end, end+l4
	t.Five = str(b[at:end])
	at, end = end, end+l5
	t.Six = str(b[at:end])
	at, end = end, end+l6
	t.Seven = str(b[at:end])
	at, end = end, end+l7
	t.Eight = str(b[at:end])
	at, end = end, end+l8
	t.Nine = str(b[at:end])
	at, end = end, end+l9
	t.Ten = str(b[at:end])
	at, end = end, end+l10
	t.Eleven = str(b[at:end])
	at, end = end, end+l11
	t.Twelve = str(b[at:end])
	at, end = end, end+l12
	t.Thirteen = str(b[at:end])
	at, end = end, end+l13
	t.Fourteen = str(b[at:end])
	at, end = end, end+l14
	t.Fifteen = str(b[at:end])
	at, end = end, end+l15
	t.Sixteen = str(b[at:end])
	at, end = end, end+l16
	t.Seventeen = str(b[at:end])
	at, end = end, end+l17
	t.Eighteen = str(b[at:end])
	at, end = end, end+l18
	t.Nineteen = str(b[at:end])
	t.Twenty = str(b[end:])
	return nil
}

func (t *TwentyOne) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18, l19, l20 := len(t.One), len(t.Two), len(t.Three), len(t.Four), len(t.Five), len(t.Six), len(t.Seven), len(t.Eight), len(t.Nine), len(t.Ten), len(t.Eleven), len(t.Twelve), len(t.Thirteen), len(t.Fourteen), len(t.Fifteen), len(t.Sixteen), len(t.Seventeen), len(t.Eighteen), len(t.Nineteen), len(t.Twenty), len(t.TwentyOne)
	b = make([]byte, 21+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17+l18+l19+l20)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10], b[11], b[12], b[13], b[14], b[15], b[16], b[17], b[18], b[19], b[20] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6), byte(l7), byte(l8), byte(l9), byte(l10), byte(l11), byte(l12), byte(l13), byte(l14), byte(l15), byte(l16), byte(l17), byte(l18), byte(l19), byte(l20)
	at, end := 21, 21+l0
	copy(b[at:end], t.One)
	at, end = end, end+l1
	copy(b[at:end], t.Two)
	at, end = end, end+l2
	copy(b[at:end], t.Three)
	at, end = end, end+l3
	copy(b[at:end], t.Four)
	at, end = end, end+l4
	copy(b[at:end], t.Five)
	at, end = end, end+l5
	copy(b[at:end], t.Six)
	at, end = end, end+l6
	copy(b[at:end], t.Seven)
	at, end = end, end+l7
	copy(b[at:end], t.Eight)
	at, end = end, end+l8
	copy(b[at:end], t.Nine)
	at, end = end, end+l9
	copy(b[at:end], t.Ten)
	at, end = end, end+l10
	copy(b[at:end], t.Eleven)
	at, end = end, end+l11
	copy(b[at:end], t.Twelve)
	at, end = end, end+l12
	copy(b[at:end], t.Thirteen)
	at, end = end, end+l13
	copy(b[at:end], t.Fourteen)
	at, end = end, end+l14
	copy(b[at:end], t.Fifteen)
	at, end = end, end+l15
	copy(b[at:end], t.Sixteen)
	at, end = end, end+l16
	copy(b[at:end], t.Seventeen)
	at, end = end, end+l17
	copy(b[at:end], t.Eighteen)
	at, end = end, end+l18
	copy(b[at:end], t.Nineteen)
	at, end = end, end+l19
	copy(b[at:end], t.Twenty)
	copy(b[end:], t.TwentyOne)
	return
}

func (t *TwentyOne) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 21 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18, l19, l20 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6]), int(b[7]), int(b[8]), int(b[9]), int(b[10]), int(b[11]), int(b[12]), int(b[13]), int(b[14]), int(b[15]), int(b[16]), int(b[17]), int(b[18]), int(b[19]), int(b[20])
	if l < 21+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17+l18+l19+l20 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 21, 21+l0
	t.One = str(b[at:end])
	at, end = end, end+l1
	t.Two = str(b[at:end])
	at, end = end, end+l2
	t.Three = str(b[at:end])
	at, end = end, end+l3
	t.Four = str(b[at:end])
	at, end = end, end+l4
	t.Five = str(b[at:end])
	at, end = end, end+l5
	t.Six = str(b[at:end])
	at, end = end, end+l6
	t.Seven = str(b[at:end])
	at, end = end, end+l7
	t.Eight = str(b[at:end])
	at, end = end, end+l8
	t.Nine = str(b[at:end])
	at, end = end, end+l9
	t.Ten = str(b[at:end])
	at, end = end, end+l10
	t.Eleven = str(b[at:end])
	at, end = end, end+l11
	t.Twelve = str(b[at:end])
	at, end = end, end+l12
	t.Thirteen = str(b[at:end])
	at, end = end, end+l13
	t.Fourteen = str(b[at:end])
	at, end = end, end+l14
	t.Fifteen = str(b[at:end])
	at, end = end, end+l15
	t.Sixteen = str(b[at:end])
	at, end = end, end+l16
	t.Seventeen = str(b[at:end])
	at, end = end, end+l17
	t.Eighteen = str(b[at:end])
	at, end = end, end+l18
	t.Nineteen = str(b[at:end])
	at, end = end, end+l19
	t.Twenty = str(b[at:end])
	t.TwentyOne = str(b[end:])
	return nil
}

func (t *TwentyTwo) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18, l19, l20, l21 := len(t.One), len(t.Two), len(t.Three), len(t.Four), len(t.Five), len(t.Six), len(t.Seven), len(t.Eight), len(t.Nine), len(t.Ten), len(t.Eleven), len(t.Twelve), len(t.Thirteen), len(t.Fourteen), len(t.Fifteen), len(t.Sixteen), len(t.Seventeen), len(t.Eighteen), len(t.Nineteen), len(t.Twenty), len(t.TwentyOne), len(t.TwentyTwo)
	b = make([]byte, 22+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17+l18+l19+l20+l21)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10], b[11], b[12], b[13], b[14], b[15], b[16], b[17], b[18], b[19], b[20], b[21] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6), byte(l7), byte(l8), byte(l9), byte(l10), byte(l11), byte(l12), byte(l13), byte(l14), byte(l15), byte(l16), byte(l17), byte(l18), byte(l19), byte(l20), byte(l21)
	at, end := 22, 22+l0
	copy(b[at:end], t.One)
	at, end = end, end+l1
	copy(b[at:end], t.Two)
	at, end = end, end+l2
	copy(b[at:end], t.Three)
	at, end = end, end+l3
	copy(b[at:end], t.Four)
	at, end = end, end+l4
	copy(b[at:end], t.Five)
	at, end = end, end+l5
	copy(b[at:end], t.Six)
	at, end = end, end+l6
	copy(b[at:end], t.Seven)
	at, end = end, end+l7
	copy(b[at:end], t.Eight)
	at, end = end, end+l8
	copy(b[at:end], t.Nine)
	at, end = end, end+l9
	copy(b[at:end], t.Ten)
	at, end = end, end+l10
	copy(b[at:end], t.Eleven)
	at, end = end, end+l11
	copy(b[at:end], t.Twelve)
	at, end = end, end+l12
	copy(b[at:end], t.Thirteen)
	at, end = end, end+l13
	copy(b[at:end], t.Fourteen)
	at, end = end, end+l14
	copy(b[at:end], t.Fifteen)
	at, end = end, end+l15
	copy(b[at:end], t.Sixteen)
	at, end = end, end+l16
	copy(b[at:end], t.Seventeen)
	at, end = end, end+l17
	copy(b[at:end], t.Eighteen)
	at, end = end, end+l18
	copy(b[at:end], t.Nineteen)
	at, end = end, end+l19
	copy(b[at:end], t.Twenty)
	at, end = end, end+l20
	copy(b[at:end], t.TwentyOne)
	copy(b[end:], t.TwentyTwo)
	return
}

func (t *TwentyTwo) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 22 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18, l19, l20, l21 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6]), int(b[7]), int(b[8]), int(b[9]), int(b[10]), int(b[11]), int(b[12]), int(b[13]), int(b[14]), int(b[15]), int(b[16]), int(b[17]), int(b[18]), int(b[19]), int(b[20]), int(b[21])
	if l < 22+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17+l18+l19+l20+l21 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 22, 22+l0
	t.One = str(b[at:end])
	at, end = end, end+l1
	t.Two = str(b[at:end])
	at, end = end, end+l2
	t.Three = str(b[at:end])
	at, end = end, end+l3
	t.Four = str(b[at:end])
	at, end = end, end+l4
	t.Five = str(b[at:end])
	at, end = end, end+l5
	t.Six = str(b[at:end])
	at, end = end, end+l6
	t.Seven = str(b[at:end])
	at, end = end, end+l7
	t.Eight = str(b[at:end])
	at, end = end, end+l8
	t.Nine = str(b[at:end])
	at, end = end, end+l9
	t.Ten = str(b[at:end])
	at, end = end, end+l10
	t.Eleven = str(b[at:end])
	at, end = end, end+l11
	t.Twelve = str(b[at:end])
	at, end = end, end+l12
	t.Thirteen = str(b[at:end])
	at, end = end, end+l13
	t.Fourteen = str(b[at:end])
	at, end = end, end+l14
	t.Fifteen = str(b[at:end])
	at, end = end, end+l15
	t.Sixteen = str(b[at:end])
	at, end = end, end+l16
	t.Seventeen = str(b[at:end])
	at, end = end, end+l17
	t.Eighteen = str(b[at:end])
	at, end = end, end+l18
	t.Nineteen = str(b[at:end])
	at, end = end, end+l19
	t.Twenty = str(b[at:end])
	at, end = end, end+l20
	t.TwentyOne = str(b[at:end])
	t.TwentyTwo = str(b[end:])
	return nil
}

func (t *TwentyThree) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18, l19, l20, l21, l22 := len(t.One), len(t.Two), len(t.Three), len(t.Four), len(t.Five), len(t.Six), len(t.Seven), len(t.Eight), len(t.Nine), len(t.Ten), len(t.Eleven), len(t.Twelve), len(t.Thirteen), len(t.Fourteen), len(t.Fifteen), len(t.Sixteen), len(t.Seventeen), len(t.Eighteen), len(t.Nineteen), len(t.Twenty), len(t.TwentyOne), len(t.TwentyTwo), len(t.TwentyThree)
	b = make([]byte, 23+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17+l18+l19+l20+l21+l22)
	b[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10], b[11], b[12], b[13], b[14], b[15], b[16], b[17], b[18], b[19], b[20], b[21], b[22] = byte(l0), byte(l1), byte(l2), byte(l3), byte(l4), byte(l5), byte(l6), byte(l7), byte(l8), byte(l9), byte(l10), byte(l11), byte(l12), byte(l13), byte(l14), byte(l15), byte(l16), byte(l17), byte(l18), byte(l19), byte(l20), byte(l21), byte(l22)
	at, end := 23, 23+l0
	copy(b[at:end], t.One)
	at, end = end, end+l1
	copy(b[at:end], t.Two)
	at, end = end, end+l2
	copy(b[at:end], t.Three)
	at, end = end, end+l3
	copy(b[at:end], t.Four)
	at, end = end, end+l4
	copy(b[at:end], t.Five)
	at, end = end, end+l5
	copy(b[at:end], t.Six)
	at, end = end, end+l6
	copy(b[at:end], t.Seven)
	at, end = end, end+l7
	copy(b[at:end], t.Eight)
	at, end = end, end+l8
	copy(b[at:end], t.Nine)
	at, end = end, end+l9
	copy(b[at:end], t.Ten)
	at, end = end, end+l10
	copy(b[at:end], t.Eleven)
	at, end = end, end+l11
	copy(b[at:end], t.Twelve)
	at, end = end, end+l12
	copy(b[at:end], t.Thirteen)
	at, end = end, end+l13
	copy(b[at:end], t.Fourteen)
	at, end = end, end+l14
	copy(b[at:end], t.Fifteen)
	at, end = end, end+l15
	copy(b[at:end], t.Sixteen)
	at, end = end, end+l16
	copy(b[at:end], t.Seventeen)
	at, end = end, end+l17
	copy(b[at:end], t.Eighteen)
	at, end = end, end+l18
	copy(b[at:end], t.Nineteen)
	at, end = end, end+l19
	copy(b[at:end], t.Twenty)
	at, end = end, end+l20
	copy(b[at:end], t.TwentyOne)
	at, end = end, end+l21
	copy(b[at:end], t.TwentyTwo)
	copy(b[end:], t.TwentyThree)
	return
}

func (t *TwentyThree) UnmarshalJ(b []byte) error {
	l := len(b)
	if l < 23 {
		return jay.ErrUnexpectedEOB
	}
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18, l19, l20, l21, l22 := int(b[0]), int(b[1]), int(b[2]), int(b[3]), int(b[4]), int(b[5]), int(b[6]), int(b[7]), int(b[8]), int(b[9]), int(b[10]), int(b[11]), int(b[12]), int(b[13]), int(b[14]), int(b[15]), int(b[16]), int(b[17]), int(b[18]), int(b[19]), int(b[20]), int(b[21]), int(b[22])
	if l < 23+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17+l18+l19+l20+l21+l22 {
		return jay.ErrUnexpectedEOB
	}
	at, end := 23, 23+l0
	t.One = str(b[at:end])
	at, end = end, end+l1
	t.Two = str(b[at:end])
	at, end = end, end+l2
	t.Three = str(b[at:end])
	at, end = end, end+l3
	t.Four = str(b[at:end])
	at, end = end, end+l4
	t.Five = str(b[at:end])
	at, end = end, end+l5
	t.Six = str(b[at:end])
	at, end = end, end+l6
	t.Seven = str(b[at:end])
	at, end = end, end+l7
	t.Eight = str(b[at:end])
	at, end = end, end+l8
	t.Nine = str(b[at:end])
	at, end = end, end+l9
	t.Ten = str(b[at:end])
	at, end = end, end+l10
	t.Eleven = str(b[at:end])
	at, end = end, end+l11
	t.Twelve = str(b[at:end])
	at, end = end, end+l12
	t.Thirteen = str(b[at:end])
	at, end = end, end+l13
	t.Fourteen = str(b[at:end])
	at, end = end, end+l14
	t.Fifteen = str(b[at:end])
	at, end = end, end+l15
	t.Sixteen = str(b[at:end])
	at, end = end, end+l16
	t.Seventeen = str(b[at:end])
	at, end = end, end+l17
	t.Eighteen = str(b[at:end])
	at, end = end, end+l18
	t.Nineteen = str(b[at:end])
	at, end = end, end+l19
	t.Twenty = str(b[at:end])
	at, end = end, end+l20
	t.TwentyOne = str(b[at:end])
	at, end = end, end+l21
	t.TwentyTwo = str(b[at:end])
	t.TwentyThree = str(b[end:])
	return nil
}
