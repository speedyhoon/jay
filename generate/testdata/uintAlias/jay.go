// Code generated by Jay; DO NOT EDIT. Tool documentation available at: https://github.com/speedyhoon/jay

package main

import "github.com/speedyhoon/jay"

func (o *One) MarshalJ() (b []byte) {
	b = make([]byte, 8)
	jay.WriteUintArch64(b, o.One)
	return
}

func (o *One) UnmarshalJ(b []byte) error {
	if len(b) < 8 {
		return jay.ErrUnexpectedEOB
	}
	o.One = jay.ReadUintArch64(b[:8])
	return nil
}

func (t *Two) MarshalJ() (b []byte) {
	b = make([]byte, 16)
	jay.WriteUintArch64(b[:8], t.One)
	jay.WriteUintArch64(b[8:], t.Two)
	return
}

func (t *Two) UnmarshalJ(b []byte) error {
	if len(b) < 16 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadUintArch64(b[:8])
	t.Two = jay.ReadUintArch64(b[8:16])
	return nil
}

func (t *Three) MarshalJ() (b []byte) {
	b = make([]byte, 24)
	jay.WriteUintArch64(b[:8], t.One)
	jay.WriteUintArch64(b[8:16], t.Two)
	jay.WriteUintArch64(b[16:], t.Three)
	return
}

func (t *Three) UnmarshalJ(b []byte) error {
	if len(b) < 24 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadUintArch64(b[:8])
	t.Two = jay.ReadUintArch64(b[8:16])
	t.Three = jay.ReadUintArch64(b[16:24])
	return nil
}

func (f *Four) MarshalJ() (b []byte) {
	b = make([]byte, 32)
	jay.WriteUintArch64(b[:8], f.One)
	jay.WriteUintArch64(b[8:16], f.Two)
	jay.WriteUintArch64(b[16:24], f.Three)
	jay.WriteUintArch64(b[24:], f.Four)
	return
}

func (f *Four) UnmarshalJ(b []byte) error {
	if len(b) < 32 {
		return jay.ErrUnexpectedEOB
	}
	f.One = jay.ReadUintArch64(b[:8])
	f.Two = jay.ReadUintArch64(b[8:16])
	f.Three = jay.ReadUintArch64(b[16:24])
	f.Four = jay.ReadUintArch64(b[24:32])
	return nil
}

func (f *Five) MarshalJ() (b []byte) {
	b = make([]byte, 40)
	jay.WriteUintArch64(b[:8], f.One)
	jay.WriteUintArch64(b[8:16], f.Two)
	jay.WriteUintArch64(b[16:24], f.Three)
	jay.WriteUintArch64(b[24:32], f.Four)
	jay.WriteUintArch64(b[32:], f.Five)
	return
}

func (f *Five) UnmarshalJ(b []byte) error {
	if len(b) < 40 {
		return jay.ErrUnexpectedEOB
	}
	f.One = jay.ReadUintArch64(b[:8])
	f.Two = jay.ReadUintArch64(b[8:16])
	f.Three = jay.ReadUintArch64(b[16:24])
	f.Four = jay.ReadUintArch64(b[24:32])
	f.Five = jay.ReadUintArch64(b[32:40])
	return nil
}

func (s *Six) MarshalJ() (b []byte) {
	b = make([]byte, 48)
	jay.WriteUintArch64(b[:8], s.One)
	jay.WriteUintArch64(b[8:16], s.Two)
	jay.WriteUintArch64(b[16:24], s.Three)
	jay.WriteUintArch64(b[24:32], s.Four)
	jay.WriteUintArch64(b[32:40], s.Five)
	jay.WriteUintArch64(b[40:], s.Six)
	return
}

func (s *Six) UnmarshalJ(b []byte) error {
	if len(b) < 48 {
		return jay.ErrUnexpectedEOB
	}
	s.One = jay.ReadUintArch64(b[:8])
	s.Two = jay.ReadUintArch64(b[8:16])
	s.Three = jay.ReadUintArch64(b[16:24])
	s.Four = jay.ReadUintArch64(b[24:32])
	s.Five = jay.ReadUintArch64(b[32:40])
	s.Six = jay.ReadUintArch64(b[40:48])
	return nil
}

func (s *Seven) MarshalJ() (b []byte) {
	b = make([]byte, 56)
	jay.WriteUintArch64(b[:8], s.One)
	jay.WriteUintArch64(b[8:16], s.Two)
	jay.WriteUintArch64(b[16:24], s.Three)
	jay.WriteUintArch64(b[24:32], s.Four)
	jay.WriteUintArch64(b[32:40], s.Five)
	jay.WriteUintArch64(b[40:48], s.Six)
	jay.WriteUintArch64(b[48:], s.Seven)
	return
}

func (s *Seven) UnmarshalJ(b []byte) error {
	if len(b) < 56 {
		return jay.ErrUnexpectedEOB
	}
	s.One = jay.ReadUintArch64(b[:8])
	s.Two = jay.ReadUintArch64(b[8:16])
	s.Three = jay.ReadUintArch64(b[16:24])
	s.Four = jay.ReadUintArch64(b[24:32])
	s.Five = jay.ReadUintArch64(b[32:40])
	s.Six = jay.ReadUintArch64(b[40:48])
	s.Seven = jay.ReadUintArch64(b[48:56])
	return nil
}

func (e *Eight) MarshalJ() (b []byte) {
	b = make([]byte, 64)
	jay.WriteUintArch64(b[:8], e.One)
	jay.WriteUintArch64(b[8:16], e.Two)
	jay.WriteUintArch64(b[16:24], e.Three)
	jay.WriteUintArch64(b[24:32], e.Four)
	jay.WriteUintArch64(b[32:40], e.Five)
	jay.WriteUintArch64(b[40:48], e.Six)
	jay.WriteUintArch64(b[48:56], e.Seven)
	jay.WriteUintArch64(b[56:], e.Eight)
	return
}

func (e *Eight) UnmarshalJ(b []byte) error {
	if len(b) < 64 {
		return jay.ErrUnexpectedEOB
	}
	e.One = jay.ReadUintArch64(b[:8])
	e.Two = jay.ReadUintArch64(b[8:16])
	e.Three = jay.ReadUintArch64(b[16:24])
	e.Four = jay.ReadUintArch64(b[24:32])
	e.Five = jay.ReadUintArch64(b[32:40])
	e.Six = jay.ReadUintArch64(b[40:48])
	e.Seven = jay.ReadUintArch64(b[48:56])
	e.Eight = jay.ReadUintArch64(b[56:64])
	return nil
}

func (n *Nine) MarshalJ() (b []byte) {
	b = make([]byte, 72)
	jay.WriteUintArch64(b[:8], n.One)
	jay.WriteUintArch64(b[8:16], n.Two)
	jay.WriteUintArch64(b[16:24], n.Three)
	jay.WriteUintArch64(b[24:32], n.Four)
	jay.WriteUintArch64(b[32:40], n.Five)
	jay.WriteUintArch64(b[40:48], n.Six)
	jay.WriteUintArch64(b[48:56], n.Seven)
	jay.WriteUintArch64(b[56:64], n.Eight)
	jay.WriteUintArch64(b[64:], n.Nine)
	return
}

func (n *Nine) UnmarshalJ(b []byte) error {
	if len(b) < 72 {
		return jay.ErrUnexpectedEOB
	}
	n.One = jay.ReadUintArch64(b[:8])
	n.Two = jay.ReadUintArch64(b[8:16])
	n.Three = jay.ReadUintArch64(b[16:24])
	n.Four = jay.ReadUintArch64(b[24:32])
	n.Five = jay.ReadUintArch64(b[32:40])
	n.Six = jay.ReadUintArch64(b[40:48])
	n.Seven = jay.ReadUintArch64(b[48:56])
	n.Eight = jay.ReadUintArch64(b[56:64])
	n.Nine = jay.ReadUintArch64(b[64:72])
	return nil
}

func (t *Ten) MarshalJ() (b []byte) {
	b = make([]byte, 80)
	jay.WriteUintArch64(b[:8], t.One)
	jay.WriteUintArch64(b[8:16], t.Two)
	jay.WriteUintArch64(b[16:24], t.Three)
	jay.WriteUintArch64(b[24:32], t.Four)
	jay.WriteUintArch64(b[32:40], t.Five)
	jay.WriteUintArch64(b[40:48], t.Six)
	jay.WriteUintArch64(b[48:56], t.Seven)
	jay.WriteUintArch64(b[56:64], t.Eight)
	jay.WriteUintArch64(b[64:72], t.Nine)
	jay.WriteUintArch64(b[72:], t.Ten)
	return
}

func (t *Ten) UnmarshalJ(b []byte) error {
	if len(b) < 80 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadUintArch64(b[:8])
	t.Two = jay.ReadUintArch64(b[8:16])
	t.Three = jay.ReadUintArch64(b[16:24])
	t.Four = jay.ReadUintArch64(b[24:32])
	t.Five = jay.ReadUintArch64(b[32:40])
	t.Six = jay.ReadUintArch64(b[40:48])
	t.Seven = jay.ReadUintArch64(b[48:56])
	t.Eight = jay.ReadUintArch64(b[56:64])
	t.Nine = jay.ReadUintArch64(b[64:72])
	t.Ten = jay.ReadUintArch64(b[72:80])
	return nil
}

func (e *Eleven) MarshalJ() (b []byte) {
	b = make([]byte, 88)
	jay.WriteUintArch64(b[:8], e.One)
	jay.WriteUintArch64(b[8:16], e.Two)
	jay.WriteUintArch64(b[16:24], e.Three)
	jay.WriteUintArch64(b[24:32], e.Four)
	jay.WriteUintArch64(b[32:40], e.Five)
	jay.WriteUintArch64(b[40:48], e.Six)
	jay.WriteUintArch64(b[48:56], e.Seven)
	jay.WriteUintArch64(b[56:64], e.Eight)
	jay.WriteUintArch64(b[64:72], e.Nine)
	jay.WriteUintArch64(b[72:80], e.Ten)
	jay.WriteUintArch64(b[80:], e.Eleven)
	return
}

func (e *Eleven) UnmarshalJ(b []byte) error {
	if len(b) < 88 {
		return jay.ErrUnexpectedEOB
	}
	e.One = jay.ReadUintArch64(b[:8])
	e.Two = jay.ReadUintArch64(b[8:16])
	e.Three = jay.ReadUintArch64(b[16:24])
	e.Four = jay.ReadUintArch64(b[24:32])
	e.Five = jay.ReadUintArch64(b[32:40])
	e.Six = jay.ReadUintArch64(b[40:48])
	e.Seven = jay.ReadUintArch64(b[48:56])
	e.Eight = jay.ReadUintArch64(b[56:64])
	e.Nine = jay.ReadUintArch64(b[64:72])
	e.Ten = jay.ReadUintArch64(b[72:80])
	e.Eleven = jay.ReadUintArch64(b[80:88])
	return nil
}

func (t *Twelve) MarshalJ() (b []byte) {
	b = make([]byte, 96)
	jay.WriteUintArch64(b[:8], t.One)
	jay.WriteUintArch64(b[8:16], t.Two)
	jay.WriteUintArch64(b[16:24], t.Three)
	jay.WriteUintArch64(b[24:32], t.Four)
	jay.WriteUintArch64(b[32:40], t.Five)
	jay.WriteUintArch64(b[40:48], t.Six)
	jay.WriteUintArch64(b[48:56], t.Seven)
	jay.WriteUintArch64(b[56:64], t.Eight)
	jay.WriteUintArch64(b[64:72], t.Nine)
	jay.WriteUintArch64(b[72:80], t.Ten)
	jay.WriteUintArch64(b[80:88], t.Eleven)
	jay.WriteUintArch64(b[88:], t.Twelve)
	return
}

func (t *Twelve) UnmarshalJ(b []byte) error {
	if len(b) < 96 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadUintArch64(b[:8])
	t.Two = jay.ReadUintArch64(b[8:16])
	t.Three = jay.ReadUintArch64(b[16:24])
	t.Four = jay.ReadUintArch64(b[24:32])
	t.Five = jay.ReadUintArch64(b[32:40])
	t.Six = jay.ReadUintArch64(b[40:48])
	t.Seven = jay.ReadUintArch64(b[48:56])
	t.Eight = jay.ReadUintArch64(b[56:64])
	t.Nine = jay.ReadUintArch64(b[64:72])
	t.Ten = jay.ReadUintArch64(b[72:80])
	t.Eleven = jay.ReadUintArch64(b[80:88])
	t.Twelve = jay.ReadUintArch64(b[88:96])
	return nil
}

func (t *Thirteen) MarshalJ() (b []byte) {
	b = make([]byte, 104)
	jay.WriteUintArch64(b[:8], t.One)
	jay.WriteUintArch64(b[8:16], t.Two)
	jay.WriteUintArch64(b[16:24], t.Three)
	jay.WriteUintArch64(b[24:32], t.Four)
	jay.WriteUintArch64(b[32:40], t.Five)
	jay.WriteUintArch64(b[40:48], t.Six)
	jay.WriteUintArch64(b[48:56], t.Seven)
	jay.WriteUintArch64(b[56:64], t.Eight)
	jay.WriteUintArch64(b[64:72], t.Nine)
	jay.WriteUintArch64(b[72:80], t.Ten)
	jay.WriteUintArch64(b[80:88], t.Eleven)
	jay.WriteUintArch64(b[88:96], t.Twelve)
	jay.WriteUintArch64(b[96:], t.Thirteen)
	return
}

func (t *Thirteen) UnmarshalJ(b []byte) error {
	if len(b) < 104 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadUintArch64(b[:8])
	t.Two = jay.ReadUintArch64(b[8:16])
	t.Three = jay.ReadUintArch64(b[16:24])
	t.Four = jay.ReadUintArch64(b[24:32])
	t.Five = jay.ReadUintArch64(b[32:40])
	t.Six = jay.ReadUintArch64(b[40:48])
	t.Seven = jay.ReadUintArch64(b[48:56])
	t.Eight = jay.ReadUintArch64(b[56:64])
	t.Nine = jay.ReadUintArch64(b[64:72])
	t.Ten = jay.ReadUintArch64(b[72:80])
	t.Eleven = jay.ReadUintArch64(b[80:88])
	t.Twelve = jay.ReadUintArch64(b[88:96])
	t.Thirteen = jay.ReadUintArch64(b[96:104])
	return nil
}

func (f *Fourteen) MarshalJ() (b []byte) {
	b = make([]byte, 112)
	jay.WriteUintArch64(b[:8], f.One)
	jay.WriteUintArch64(b[8:16], f.Two)
	jay.WriteUintArch64(b[16:24], f.Three)
	jay.WriteUintArch64(b[24:32], f.Four)
	jay.WriteUintArch64(b[32:40], f.Five)
	jay.WriteUintArch64(b[40:48], f.Six)
	jay.WriteUintArch64(b[48:56], f.Seven)
	jay.WriteUintArch64(b[56:64], f.Eight)
	jay.WriteUintArch64(b[64:72], f.Nine)
	jay.WriteUintArch64(b[72:80], f.Ten)
	jay.WriteUintArch64(b[80:88], f.Eleven)
	jay.WriteUintArch64(b[88:96], f.Twelve)
	jay.WriteUintArch64(b[96:104], f.Thirteen)
	jay.WriteUintArch64(b[104:], f.Fourteen)
	return
}

func (f *Fourteen) UnmarshalJ(b []byte) error {
	if len(b) < 112 {
		return jay.ErrUnexpectedEOB
	}
	f.One = jay.ReadUintArch64(b[:8])
	f.Two = jay.ReadUintArch64(b[8:16])
	f.Three = jay.ReadUintArch64(b[16:24])
	f.Four = jay.ReadUintArch64(b[24:32])
	f.Five = jay.ReadUintArch64(b[32:40])
	f.Six = jay.ReadUintArch64(b[40:48])
	f.Seven = jay.ReadUintArch64(b[48:56])
	f.Eight = jay.ReadUintArch64(b[56:64])
	f.Nine = jay.ReadUintArch64(b[64:72])
	f.Ten = jay.ReadUintArch64(b[72:80])
	f.Eleven = jay.ReadUintArch64(b[80:88])
	f.Twelve = jay.ReadUintArch64(b[88:96])
	f.Thirteen = jay.ReadUintArch64(b[96:104])
	f.Fourteen = jay.ReadUintArch64(b[104:112])
	return nil
}

func (f *Fifteen) MarshalJ() (b []byte) {
	b = make([]byte, 120)
	jay.WriteUintArch64(b[:8], f.One)
	jay.WriteUintArch64(b[8:16], f.Two)
	jay.WriteUintArch64(b[16:24], f.Three)
	jay.WriteUintArch64(b[24:32], f.Four)
	jay.WriteUintArch64(b[32:40], f.Five)
	jay.WriteUintArch64(b[40:48], f.Six)
	jay.WriteUintArch64(b[48:56], f.Seven)
	jay.WriteUintArch64(b[56:64], f.Eight)
	jay.WriteUintArch64(b[64:72], f.Nine)
	jay.WriteUintArch64(b[72:80], f.Ten)
	jay.WriteUintArch64(b[80:88], f.Eleven)
	jay.WriteUintArch64(b[88:96], f.Twelve)
	jay.WriteUintArch64(b[96:104], f.Thirteen)
	jay.WriteUintArch64(b[104:112], f.Fourteen)
	jay.WriteUintArch64(b[112:], f.Fifteen)
	return
}

func (f *Fifteen) UnmarshalJ(b []byte) error {
	if len(b) < 120 {
		return jay.ErrUnexpectedEOB
	}
	f.One = jay.ReadUintArch64(b[:8])
	f.Two = jay.ReadUintArch64(b[8:16])
	f.Three = jay.ReadUintArch64(b[16:24])
	f.Four = jay.ReadUintArch64(b[24:32])
	f.Five = jay.ReadUintArch64(b[32:40])
	f.Six = jay.ReadUintArch64(b[40:48])
	f.Seven = jay.ReadUintArch64(b[48:56])
	f.Eight = jay.ReadUintArch64(b[56:64])
	f.Nine = jay.ReadUintArch64(b[64:72])
	f.Ten = jay.ReadUintArch64(b[72:80])
	f.Eleven = jay.ReadUintArch64(b[80:88])
	f.Twelve = jay.ReadUintArch64(b[88:96])
	f.Thirteen = jay.ReadUintArch64(b[96:104])
	f.Fourteen = jay.ReadUintArch64(b[104:112])
	f.Fifteen = jay.ReadUintArch64(b[112:120])
	return nil
}

func (s *Sixteen) MarshalJ() (b []byte) {
	b = make([]byte, 128)
	jay.WriteUintArch64(b[:8], s.One)
	jay.WriteUintArch64(b[8:16], s.Two)
	jay.WriteUintArch64(b[16:24], s.Three)
	jay.WriteUintArch64(b[24:32], s.Four)
	jay.WriteUintArch64(b[32:40], s.Five)
	jay.WriteUintArch64(b[40:48], s.Six)
	jay.WriteUintArch64(b[48:56], s.Seven)
	jay.WriteUintArch64(b[56:64], s.Eight)
	jay.WriteUintArch64(b[64:72], s.Nine)
	jay.WriteUintArch64(b[72:80], s.Ten)
	jay.WriteUintArch64(b[80:88], s.Eleven)
	jay.WriteUintArch64(b[88:96], s.Twelve)
	jay.WriteUintArch64(b[96:104], s.Thirteen)
	jay.WriteUintArch64(b[104:112], s.Fourteen)
	jay.WriteUintArch64(b[112:120], s.Fifteen)
	jay.WriteUintArch64(b[120:], s.Sixteen)
	return
}

func (s *Sixteen) UnmarshalJ(b []byte) error {
	if len(b) < 128 {
		return jay.ErrUnexpectedEOB
	}
	s.One = jay.ReadUintArch64(b[:8])
	s.Two = jay.ReadUintArch64(b[8:16])
	s.Three = jay.ReadUintArch64(b[16:24])
	s.Four = jay.ReadUintArch64(b[24:32])
	s.Five = jay.ReadUintArch64(b[32:40])
	s.Six = jay.ReadUintArch64(b[40:48])
	s.Seven = jay.ReadUintArch64(b[48:56])
	s.Eight = jay.ReadUintArch64(b[56:64])
	s.Nine = jay.ReadUintArch64(b[64:72])
	s.Ten = jay.ReadUintArch64(b[72:80])
	s.Eleven = jay.ReadUintArch64(b[80:88])
	s.Twelve = jay.ReadUintArch64(b[88:96])
	s.Thirteen = jay.ReadUintArch64(b[96:104])
	s.Fourteen = jay.ReadUintArch64(b[104:112])
	s.Fifteen = jay.ReadUintArch64(b[112:120])
	s.Sixteen = jay.ReadUintArch64(b[120:128])
	return nil
}

func (s *Seventeen) MarshalJ() (b []byte) {
	b = make([]byte, 136)
	jay.WriteUintArch64(b[:8], s.One)
	jay.WriteUintArch64(b[8:16], s.Two)
	jay.WriteUintArch64(b[16:24], s.Three)
	jay.WriteUintArch64(b[24:32], s.Four)
	jay.WriteUintArch64(b[32:40], s.Five)
	jay.WriteUintArch64(b[40:48], s.Six)
	jay.WriteUintArch64(b[48:56], s.Seven)
	jay.WriteUintArch64(b[56:64], s.Eight)
	jay.WriteUintArch64(b[64:72], s.Nine)
	jay.WriteUintArch64(b[72:80], s.Ten)
	jay.WriteUintArch64(b[80:88], s.Eleven)
	jay.WriteUintArch64(b[88:96], s.Twelve)
	jay.WriteUintArch64(b[96:104], s.Thirteen)
	jay.WriteUintArch64(b[104:112], s.Fourteen)
	jay.WriteUintArch64(b[112:120], s.Fifteen)
	jay.WriteUintArch64(b[120:128], s.Sixteen)
	jay.WriteUintArch64(b[128:], s.Seventeen)
	return
}

func (s *Seventeen) UnmarshalJ(b []byte) error {
	if len(b) < 136 {
		return jay.ErrUnexpectedEOB
	}
	s.One = jay.ReadUintArch64(b[:8])
	s.Two = jay.ReadUintArch64(b[8:16])
	s.Three = jay.ReadUintArch64(b[16:24])
	s.Four = jay.ReadUintArch64(b[24:32])
	s.Five = jay.ReadUintArch64(b[32:40])
	s.Six = jay.ReadUintArch64(b[40:48])
	s.Seven = jay.ReadUintArch64(b[48:56])
	s.Eight = jay.ReadUintArch64(b[56:64])
	s.Nine = jay.ReadUintArch64(b[64:72])
	s.Ten = jay.ReadUintArch64(b[72:80])
	s.Eleven = jay.ReadUintArch64(b[80:88])
	s.Twelve = jay.ReadUintArch64(b[88:96])
	s.Thirteen = jay.ReadUintArch64(b[96:104])
	s.Fourteen = jay.ReadUintArch64(b[104:112])
	s.Fifteen = jay.ReadUintArch64(b[112:120])
	s.Sixteen = jay.ReadUintArch64(b[120:128])
	s.Seventeen = jay.ReadUintArch64(b[128:136])
	return nil
}

func (e *Eighteen) MarshalJ() (b []byte) {
	b = make([]byte, 144)
	jay.WriteUintArch64(b[:8], e.One)
	jay.WriteUintArch64(b[8:16], e.Two)
	jay.WriteUintArch64(b[16:24], e.Three)
	jay.WriteUintArch64(b[24:32], e.Four)
	jay.WriteUintArch64(b[32:40], e.Five)
	jay.WriteUintArch64(b[40:48], e.Six)
	jay.WriteUintArch64(b[48:56], e.Seven)
	jay.WriteUintArch64(b[56:64], e.Eight)
	jay.WriteUintArch64(b[64:72], e.Nine)
	jay.WriteUintArch64(b[72:80], e.Ten)
	jay.WriteUintArch64(b[80:88], e.Eleven)
	jay.WriteUintArch64(b[88:96], e.Twelve)
	jay.WriteUintArch64(b[96:104], e.Thirteen)
	jay.WriteUintArch64(b[104:112], e.Fourteen)
	jay.WriteUintArch64(b[112:120], e.Fifteen)
	jay.WriteUintArch64(b[120:128], e.Sixteen)
	jay.WriteUintArch64(b[128:136], e.Seventeen)
	jay.WriteUintArch64(b[136:], e.Eighteen)
	return
}

func (e *Eighteen) UnmarshalJ(b []byte) error {
	if len(b) < 144 {
		return jay.ErrUnexpectedEOB
	}
	e.One = jay.ReadUintArch64(b[:8])
	e.Two = jay.ReadUintArch64(b[8:16])
	e.Three = jay.ReadUintArch64(b[16:24])
	e.Four = jay.ReadUintArch64(b[24:32])
	e.Five = jay.ReadUintArch64(b[32:40])
	e.Six = jay.ReadUintArch64(b[40:48])
	e.Seven = jay.ReadUintArch64(b[48:56])
	e.Eight = jay.ReadUintArch64(b[56:64])
	e.Nine = jay.ReadUintArch64(b[64:72])
	e.Ten = jay.ReadUintArch64(b[72:80])
	e.Eleven = jay.ReadUintArch64(b[80:88])
	e.Twelve = jay.ReadUintArch64(b[88:96])
	e.Thirteen = jay.ReadUintArch64(b[96:104])
	e.Fourteen = jay.ReadUintArch64(b[104:112])
	e.Fifteen = jay.ReadUintArch64(b[112:120])
	e.Sixteen = jay.ReadUintArch64(b[120:128])
	e.Seventeen = jay.ReadUintArch64(b[128:136])
	e.Eighteen = jay.ReadUintArch64(b[136:144])
	return nil
}

func (n *Nineteen) MarshalJ() (b []byte) {
	b = make([]byte, 152)
	jay.WriteUintArch64(b[:8], n.One)
	jay.WriteUintArch64(b[8:16], n.Two)
	jay.WriteUintArch64(b[16:24], n.Three)
	jay.WriteUintArch64(b[24:32], n.Four)
	jay.WriteUintArch64(b[32:40], n.Five)
	jay.WriteUintArch64(b[40:48], n.Six)
	jay.WriteUintArch64(b[48:56], n.Seven)
	jay.WriteUintArch64(b[56:64], n.Eight)
	jay.WriteUintArch64(b[64:72], n.Nine)
	jay.WriteUintArch64(b[72:80], n.Ten)
	jay.WriteUintArch64(b[80:88], n.Eleven)
	jay.WriteUintArch64(b[88:96], n.Twelve)
	jay.WriteUintArch64(b[96:104], n.Thirteen)
	jay.WriteUintArch64(b[104:112], n.Fourteen)
	jay.WriteUintArch64(b[112:120], n.Fifteen)
	jay.WriteUintArch64(b[120:128], n.Sixteen)
	jay.WriteUintArch64(b[128:136], n.Seventeen)
	jay.WriteUintArch64(b[136:144], n.Eighteen)
	jay.WriteUintArch64(b[144:], n.Nineteen)
	return
}

func (n *Nineteen) UnmarshalJ(b []byte) error {
	if len(b) < 152 {
		return jay.ErrUnexpectedEOB
	}
	n.One = jay.ReadUintArch64(b[:8])
	n.Two = jay.ReadUintArch64(b[8:16])
	n.Three = jay.ReadUintArch64(b[16:24])
	n.Four = jay.ReadUintArch64(b[24:32])
	n.Five = jay.ReadUintArch64(b[32:40])
	n.Six = jay.ReadUintArch64(b[40:48])
	n.Seven = jay.ReadUintArch64(b[48:56])
	n.Eight = jay.ReadUintArch64(b[56:64])
	n.Nine = jay.ReadUintArch64(b[64:72])
	n.Ten = jay.ReadUintArch64(b[72:80])
	n.Eleven = jay.ReadUintArch64(b[80:88])
	n.Twelve = jay.ReadUintArch64(b[88:96])
	n.Thirteen = jay.ReadUintArch64(b[96:104])
	n.Fourteen = jay.ReadUintArch64(b[104:112])
	n.Fifteen = jay.ReadUintArch64(b[112:120])
	n.Sixteen = jay.ReadUintArch64(b[120:128])
	n.Seventeen = jay.ReadUintArch64(b[128:136])
	n.Eighteen = jay.ReadUintArch64(b[136:144])
	n.Nineteen = jay.ReadUintArch64(b[144:152])
	return nil
}

func (t *Twenty) MarshalJ() (b []byte) {
	b = make([]byte, 160)
	jay.WriteUintArch64(b[:8], t.One)
	jay.WriteUintArch64(b[8:16], t.Two)
	jay.WriteUintArch64(b[16:24], t.Three)
	jay.WriteUintArch64(b[24:32], t.Four)
	jay.WriteUintArch64(b[32:40], t.Five)
	jay.WriteUintArch64(b[40:48], t.Six)
	jay.WriteUintArch64(b[48:56], t.Seven)
	jay.WriteUintArch64(b[56:64], t.Eight)
	jay.WriteUintArch64(b[64:72], t.Nine)
	jay.WriteUintArch64(b[72:80], t.Ten)
	jay.WriteUintArch64(b[80:88], t.Eleven)
	jay.WriteUintArch64(b[88:96], t.Twelve)
	jay.WriteUintArch64(b[96:104], t.Thirteen)
	jay.WriteUintArch64(b[104:112], t.Fourteen)
	jay.WriteUintArch64(b[112:120], t.Fifteen)
	jay.WriteUintArch64(b[120:128], t.Sixteen)
	jay.WriteUintArch64(b[128:136], t.Seventeen)
	jay.WriteUintArch64(b[136:144], t.Eighteen)
	jay.WriteUintArch64(b[144:152], t.Nineteen)
	jay.WriteUintArch64(b[152:], t.Twenty)
	return
}

func (t *Twenty) UnmarshalJ(b []byte) error {
	if len(b) < 160 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadUintArch64(b[:8])
	t.Two = jay.ReadUintArch64(b[8:16])
	t.Three = jay.ReadUintArch64(b[16:24])
	t.Four = jay.ReadUintArch64(b[24:32])
	t.Five = jay.ReadUintArch64(b[32:40])
	t.Six = jay.ReadUintArch64(b[40:48])
	t.Seven = jay.ReadUintArch64(b[48:56])
	t.Eight = jay.ReadUintArch64(b[56:64])
	t.Nine = jay.ReadUintArch64(b[64:72])
	t.Ten = jay.ReadUintArch64(b[72:80])
	t.Eleven = jay.ReadUintArch64(b[80:88])
	t.Twelve = jay.ReadUintArch64(b[88:96])
	t.Thirteen = jay.ReadUintArch64(b[96:104])
	t.Fourteen = jay.ReadUintArch64(b[104:112])
	t.Fifteen = jay.ReadUintArch64(b[112:120])
	t.Sixteen = jay.ReadUintArch64(b[120:128])
	t.Seventeen = jay.ReadUintArch64(b[128:136])
	t.Eighteen = jay.ReadUintArch64(b[136:144])
	t.Nineteen = jay.ReadUintArch64(b[144:152])
	t.Twenty = jay.ReadUintArch64(b[152:160])
	return nil
}

func (t *TwentyOne) MarshalJ() (b []byte) {
	b = make([]byte, 168)
	jay.WriteUintArch64(b[:8], t.One)
	jay.WriteUintArch64(b[8:16], t.Two)
	jay.WriteUintArch64(b[16:24], t.Three)
	jay.WriteUintArch64(b[24:32], t.Four)
	jay.WriteUintArch64(b[32:40], t.Five)
	jay.WriteUintArch64(b[40:48], t.Six)
	jay.WriteUintArch64(b[48:56], t.Seven)
	jay.WriteUintArch64(b[56:64], t.Eight)
	jay.WriteUintArch64(b[64:72], t.Nine)
	jay.WriteUintArch64(b[72:80], t.Ten)
	jay.WriteUintArch64(b[80:88], t.Eleven)
	jay.WriteUintArch64(b[88:96], t.Twelve)
	jay.WriteUintArch64(b[96:104], t.Thirteen)
	jay.WriteUintArch64(b[104:112], t.Fourteen)
	jay.WriteUintArch64(b[112:120], t.Fifteen)
	jay.WriteUintArch64(b[120:128], t.Sixteen)
	jay.WriteUintArch64(b[128:136], t.Seventeen)
	jay.WriteUintArch64(b[136:144], t.Eighteen)
	jay.WriteUintArch64(b[144:152], t.Nineteen)
	jay.WriteUintArch64(b[152:160], t.Twenty)
	jay.WriteUintArch64(b[160:], t.TwentyOne)
	return
}

func (t *TwentyOne) UnmarshalJ(b []byte) error {
	if len(b) < 168 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadUintArch64(b[:8])
	t.Two = jay.ReadUintArch64(b[8:16])
	t.Three = jay.ReadUintArch64(b[16:24])
	t.Four = jay.ReadUintArch64(b[24:32])
	t.Five = jay.ReadUintArch64(b[32:40])
	t.Six = jay.ReadUintArch64(b[40:48])
	t.Seven = jay.ReadUintArch64(b[48:56])
	t.Eight = jay.ReadUintArch64(b[56:64])
	t.Nine = jay.ReadUintArch64(b[64:72])
	t.Ten = jay.ReadUintArch64(b[72:80])
	t.Eleven = jay.ReadUintArch64(b[80:88])
	t.Twelve = jay.ReadUintArch64(b[88:96])
	t.Thirteen = jay.ReadUintArch64(b[96:104])
	t.Fourteen = jay.ReadUintArch64(b[104:112])
	t.Fifteen = jay.ReadUintArch64(b[112:120])
	t.Sixteen = jay.ReadUintArch64(b[120:128])
	t.Seventeen = jay.ReadUintArch64(b[128:136])
	t.Eighteen = jay.ReadUintArch64(b[136:144])
	t.Nineteen = jay.ReadUintArch64(b[144:152])
	t.Twenty = jay.ReadUintArch64(b[152:160])
	t.TwentyOne = jay.ReadUintArch64(b[160:168])
	return nil
}

func (t *TwentyTwo) MarshalJ() (b []byte) {
	b = make([]byte, 176)
	jay.WriteUintArch64(b[:8], t.One)
	jay.WriteUintArch64(b[8:16], t.Two)
	jay.WriteUintArch64(b[16:24], t.Three)
	jay.WriteUintArch64(b[24:32], t.Four)
	jay.WriteUintArch64(b[32:40], t.Five)
	jay.WriteUintArch64(b[40:48], t.Six)
	jay.WriteUintArch64(b[48:56], t.Seven)
	jay.WriteUintArch64(b[56:64], t.Eight)
	jay.WriteUintArch64(b[64:72], t.Nine)
	jay.WriteUintArch64(b[72:80], t.Ten)
	jay.WriteUintArch64(b[80:88], t.Eleven)
	jay.WriteUintArch64(b[88:96], t.Twelve)
	jay.WriteUintArch64(b[96:104], t.Thirteen)
	jay.WriteUintArch64(b[104:112], t.Fourteen)
	jay.WriteUintArch64(b[112:120], t.Fifteen)
	jay.WriteUintArch64(b[120:128], t.Sixteen)
	jay.WriteUintArch64(b[128:136], t.Seventeen)
	jay.WriteUintArch64(b[136:144], t.Eighteen)
	jay.WriteUintArch64(b[144:152], t.Nineteen)
	jay.WriteUintArch64(b[152:160], t.Twenty)
	jay.WriteUintArch64(b[160:168], t.TwentyOne)
	jay.WriteUintArch64(b[168:], t.TwentyTwo)
	return
}

func (t *TwentyTwo) UnmarshalJ(b []byte) error {
	if len(b) < 176 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadUintArch64(b[:8])
	t.Two = jay.ReadUintArch64(b[8:16])
	t.Three = jay.ReadUintArch64(b[16:24])
	t.Four = jay.ReadUintArch64(b[24:32])
	t.Five = jay.ReadUintArch64(b[32:40])
	t.Six = jay.ReadUintArch64(b[40:48])
	t.Seven = jay.ReadUintArch64(b[48:56])
	t.Eight = jay.ReadUintArch64(b[56:64])
	t.Nine = jay.ReadUintArch64(b[64:72])
	t.Ten = jay.ReadUintArch64(b[72:80])
	t.Eleven = jay.ReadUintArch64(b[80:88])
	t.Twelve = jay.ReadUintArch64(b[88:96])
	t.Thirteen = jay.ReadUintArch64(b[96:104])
	t.Fourteen = jay.ReadUintArch64(b[104:112])
	t.Fifteen = jay.ReadUintArch64(b[112:120])
	t.Sixteen = jay.ReadUintArch64(b[120:128])
	t.Seventeen = jay.ReadUintArch64(b[128:136])
	t.Eighteen = jay.ReadUintArch64(b[136:144])
	t.Nineteen = jay.ReadUintArch64(b[144:152])
	t.Twenty = jay.ReadUintArch64(b[152:160])
	t.TwentyOne = jay.ReadUintArch64(b[160:168])
	t.TwentyTwo = jay.ReadUintArch64(b[168:176])
	return nil
}

func (t *TwentyThree) MarshalJ() (b []byte) {
	b = make([]byte, 184)
	jay.WriteUintArch64(b[:8], t.One)
	jay.WriteUintArch64(b[8:16], t.Two)
	jay.WriteUintArch64(b[16:24], t.Three)
	jay.WriteUintArch64(b[24:32], t.Four)
	jay.WriteUintArch64(b[32:40], t.Five)
	jay.WriteUintArch64(b[40:48], t.Six)
	jay.WriteUintArch64(b[48:56], t.Seven)
	jay.WriteUintArch64(b[56:64], t.Eight)
	jay.WriteUintArch64(b[64:72], t.Nine)
	jay.WriteUintArch64(b[72:80], t.Ten)
	jay.WriteUintArch64(b[80:88], t.Eleven)
	jay.WriteUintArch64(b[88:96], t.Twelve)
	jay.WriteUintArch64(b[96:104], t.Thirteen)
	jay.WriteUintArch64(b[104:112], t.Fourteen)
	jay.WriteUintArch64(b[112:120], t.Fifteen)
	jay.WriteUintArch64(b[120:128], t.Sixteen)
	jay.WriteUintArch64(b[128:136], t.Seventeen)
	jay.WriteUintArch64(b[136:144], t.Eighteen)
	jay.WriteUintArch64(b[144:152], t.Nineteen)
	jay.WriteUintArch64(b[152:160], t.Twenty)
	jay.WriteUintArch64(b[160:168], t.TwentyOne)
	jay.WriteUintArch64(b[168:176], t.TwentyTwo)
	jay.WriteUintArch64(b[176:], t.TwentyThree)
	return
}

func (t *TwentyThree) UnmarshalJ(b []byte) error {
	if len(b) < 184 {
		return jay.ErrUnexpectedEOB
	}
	t.One = jay.ReadUintArch64(b[:8])
	t.Two = jay.ReadUintArch64(b[8:16])
	t.Three = jay.ReadUintArch64(b[16:24])
	t.Four = jay.ReadUintArch64(b[24:32])
	t.Five = jay.ReadUintArch64(b[32:40])
	t.Six = jay.ReadUintArch64(b[40:48])
	t.Seven = jay.ReadUintArch64(b[48:56])
	t.Eight = jay.ReadUintArch64(b[56:64])
	t.Nine = jay.ReadUintArch64(b[64:72])
	t.Ten = jay.ReadUintArch64(b[72:80])
	t.Eleven = jay.ReadUintArch64(b[80:88])
	t.Twelve = jay.ReadUintArch64(b[88:96])
	t.Thirteen = jay.ReadUintArch64(b[96:104])
	t.Fourteen = jay.ReadUintArch64(b[104:112])
	t.Fifteen = jay.ReadUintArch64(b[112:120])
	t.Sixteen = jay.ReadUintArch64(b[120:128])
	t.Seventeen = jay.ReadUintArch64(b[128:136])
	t.Eighteen = jay.ReadUintArch64(b[136:144])
	t.Nineteen = jay.ReadUintArch64(b[144:152])
	t.Twenty = jay.ReadUintArch64(b[152:160])
	t.TwentyOne = jay.ReadUintArch64(b[160:168])
	t.TwentyTwo = jay.ReadUintArch64(b[168:176])
	t.TwentyThree = jay.ReadUintArch64(b[176:184])
	return nil
}
