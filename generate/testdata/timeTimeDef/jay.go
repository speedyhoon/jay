// Code generated by Jay; DO NOT EDIT. Tool documentation available at: https://github.com/speedyhoon/jay

package main

import (
	"time"

	"github.com/speedyhoon/jay"
)

func (o *One) MarshalJ() (b []byte) {
	b = make([]byte, 8)
	jay.WriteTime(b, time.Time(o.One))
	return
}

func (o *One) UnmarshalJ(b []byte) error {
	if len(b) < 8 {
		return jay.ErrUnexpectedEOB
	}
	o.One = dateTime(jay.ReadTime(b))
	return nil
}

func (t *Two) MarshalJ() (b []byte) {
	b = make([]byte, 16)
	jay.WriteTime(b[:8], time.Time(t.One))
	jay.WriteTime(b[8:], time.Time(t.Two))
	return
}

func (t *Two) UnmarshalJ(b []byte) error {
	if len(b) < 16 {
		return jay.ErrUnexpectedEOB
	}
	t.One = dateTime(jay.ReadTime(b[:8]))
	t.Two = dateTime(jay.ReadTime(b[8:]))
	return nil
}

func (t *Three) MarshalJ() (b []byte) {
	b = make([]byte, 24)
	jay.WriteTime(b[:8], time.Time(t.One))
	jay.WriteTime(b[8:16], time.Time(t.Two))
	jay.WriteTime(b[16:], time.Time(t.Three))
	return
}

func (t *Three) UnmarshalJ(b []byte) error {
	if len(b) < 24 {
		return jay.ErrUnexpectedEOB
	}
	t.One = dateTime(jay.ReadTime(b[:8]))
	t.Two = dateTime(jay.ReadTime(b[8:16]))
	t.Three = dateTime(jay.ReadTime(b[16:]))
	return nil
}

func (f *Four) MarshalJ() (b []byte) {
	b = make([]byte, 32)
	jay.WriteTime(b[:8], time.Time(f.One))
	jay.WriteTime(b[8:16], time.Time(f.Two))
	jay.WriteTime(b[16:24], time.Time(f.Three))
	jay.WriteTime(b[24:], time.Time(f.Four))
	return
}

func (f *Four) UnmarshalJ(b []byte) error {
	if len(b) < 32 {
		return jay.ErrUnexpectedEOB
	}
	f.One = dateTime(jay.ReadTime(b[:8]))
	f.Two = dateTime(jay.ReadTime(b[8:16]))
	f.Three = dateTime(jay.ReadTime(b[16:24]))
	f.Four = dateTime(jay.ReadTime(b[24:]))
	return nil
}

func (f *Five) MarshalJ() (b []byte) {
	b = make([]byte, 40)
	jay.WriteTime(b[:8], time.Time(f.One))
	jay.WriteTime(b[8:16], time.Time(f.Two))
	jay.WriteTime(b[16:24], time.Time(f.Three))
	jay.WriteTime(b[24:32], time.Time(f.Four))
	jay.WriteTime(b[32:], time.Time(f.Five))
	return
}

func (f *Five) UnmarshalJ(b []byte) error {
	if len(b) < 40 {
		return jay.ErrUnexpectedEOB
	}
	f.One = dateTime(jay.ReadTime(b[:8]))
	f.Two = dateTime(jay.ReadTime(b[8:16]))
	f.Three = dateTime(jay.ReadTime(b[16:24]))
	f.Four = dateTime(jay.ReadTime(b[24:32]))
	f.Five = dateTime(jay.ReadTime(b[32:]))
	return nil
}

func (s *Six) MarshalJ() (b []byte) {
	b = make([]byte, 48)
	jay.WriteTime(b[:8], time.Time(s.One))
	jay.WriteTime(b[8:16], time.Time(s.Two))
	jay.WriteTime(b[16:24], time.Time(s.Three))
	jay.WriteTime(b[24:32], time.Time(s.Four))
	jay.WriteTime(b[32:40], time.Time(s.Five))
	jay.WriteTime(b[40:], time.Time(s.Six))
	return
}

func (s *Six) UnmarshalJ(b []byte) error {
	if len(b) < 48 {
		return jay.ErrUnexpectedEOB
	}
	s.One = dateTime(jay.ReadTime(b[:8]))
	s.Two = dateTime(jay.ReadTime(b[8:16]))
	s.Three = dateTime(jay.ReadTime(b[16:24]))
	s.Four = dateTime(jay.ReadTime(b[24:32]))
	s.Five = dateTime(jay.ReadTime(b[32:40]))
	s.Six = dateTime(jay.ReadTime(b[40:]))
	return nil
}

func (s *Seven) MarshalJ() (b []byte) {
	b = make([]byte, 56)
	jay.WriteTime(b[:8], time.Time(s.One))
	jay.WriteTime(b[8:16], time.Time(s.Two))
	jay.WriteTime(b[16:24], time.Time(s.Three))
	jay.WriteTime(b[24:32], time.Time(s.Four))
	jay.WriteTime(b[32:40], time.Time(s.Five))
	jay.WriteTime(b[40:48], time.Time(s.Six))
	jay.WriteTime(b[48:], time.Time(s.Seven))
	return
}

func (s *Seven) UnmarshalJ(b []byte) error {
	if len(b) < 56 {
		return jay.ErrUnexpectedEOB
	}
	s.One = dateTime(jay.ReadTime(b[:8]))
	s.Two = dateTime(jay.ReadTime(b[8:16]))
	s.Three = dateTime(jay.ReadTime(b[16:24]))
	s.Four = dateTime(jay.ReadTime(b[24:32]))
	s.Five = dateTime(jay.ReadTime(b[32:40]))
	s.Six = dateTime(jay.ReadTime(b[40:48]))
	s.Seven = dateTime(jay.ReadTime(b[48:]))
	return nil
}

func (e *Eight) MarshalJ() (b []byte) {
	b = make([]byte, 64)
	jay.WriteTime(b[:8], time.Time(e.One))
	jay.WriteTime(b[8:16], time.Time(e.Two))
	jay.WriteTime(b[16:24], time.Time(e.Three))
	jay.WriteTime(b[24:32], time.Time(e.Four))
	jay.WriteTime(b[32:40], time.Time(e.Five))
	jay.WriteTime(b[40:48], time.Time(e.Six))
	jay.WriteTime(b[48:56], time.Time(e.Seven))
	jay.WriteTime(b[56:], time.Time(e.Eight))
	return
}

func (e *Eight) UnmarshalJ(b []byte) error {
	if len(b) < 64 {
		return jay.ErrUnexpectedEOB
	}
	e.One = dateTime(jay.ReadTime(b[:8]))
	e.Two = dateTime(jay.ReadTime(b[8:16]))
	e.Three = dateTime(jay.ReadTime(b[16:24]))
	e.Four = dateTime(jay.ReadTime(b[24:32]))
	e.Five = dateTime(jay.ReadTime(b[32:40]))
	e.Six = dateTime(jay.ReadTime(b[40:48]))
	e.Seven = dateTime(jay.ReadTime(b[48:56]))
	e.Eight = dateTime(jay.ReadTime(b[56:]))
	return nil
}

func (n *Nine) MarshalJ() (b []byte) {
	b = make([]byte, 72)
	jay.WriteTime(b[:8], time.Time(n.One))
	jay.WriteTime(b[8:16], time.Time(n.Two))
	jay.WriteTime(b[16:24], time.Time(n.Three))
	jay.WriteTime(b[24:32], time.Time(n.Four))
	jay.WriteTime(b[32:40], time.Time(n.Five))
	jay.WriteTime(b[40:48], time.Time(n.Six))
	jay.WriteTime(b[48:56], time.Time(n.Seven))
	jay.WriteTime(b[56:64], time.Time(n.Eight))
	jay.WriteTime(b[64:], time.Time(n.Nine))
	return
}

func (n *Nine) UnmarshalJ(b []byte) error {
	if len(b) < 72 {
		return jay.ErrUnexpectedEOB
	}
	n.One = dateTime(jay.ReadTime(b[:8]))
	n.Two = dateTime(jay.ReadTime(b[8:16]))
	n.Three = dateTime(jay.ReadTime(b[16:24]))
	n.Four = dateTime(jay.ReadTime(b[24:32]))
	n.Five = dateTime(jay.ReadTime(b[32:40]))
	n.Six = dateTime(jay.ReadTime(b[40:48]))
	n.Seven = dateTime(jay.ReadTime(b[48:56]))
	n.Eight = dateTime(jay.ReadTime(b[56:64]))
	n.Nine = dateTime(jay.ReadTime(b[64:]))
	return nil
}

func (t *Ten) MarshalJ() (b []byte) {
	b = make([]byte, 80)
	jay.WriteTime(b[:8], time.Time(t.One))
	jay.WriteTime(b[8:16], time.Time(t.Two))
	jay.WriteTime(b[16:24], time.Time(t.Three))
	jay.WriteTime(b[24:32], time.Time(t.Four))
	jay.WriteTime(b[32:40], time.Time(t.Five))
	jay.WriteTime(b[40:48], time.Time(t.Six))
	jay.WriteTime(b[48:56], time.Time(t.Seven))
	jay.WriteTime(b[56:64], time.Time(t.Eight))
	jay.WriteTime(b[64:72], time.Time(t.Nine))
	jay.WriteTime(b[72:], time.Time(t.Ten))
	return
}

func (t *Ten) UnmarshalJ(b []byte) error {
	if len(b) < 80 {
		return jay.ErrUnexpectedEOB
	}
	t.One = dateTime(jay.ReadTime(b[:8]))
	t.Two = dateTime(jay.ReadTime(b[8:16]))
	t.Three = dateTime(jay.ReadTime(b[16:24]))
	t.Four = dateTime(jay.ReadTime(b[24:32]))
	t.Five = dateTime(jay.ReadTime(b[32:40]))
	t.Six = dateTime(jay.ReadTime(b[40:48]))
	t.Seven = dateTime(jay.ReadTime(b[48:56]))
	t.Eight = dateTime(jay.ReadTime(b[56:64]))
	t.Nine = dateTime(jay.ReadTime(b[64:72]))
	t.Ten = dateTime(jay.ReadTime(b[72:]))
	return nil
}

func (e *Eleven) MarshalJ() (b []byte) {
	b = make([]byte, 88)
	jay.WriteTime(b[:8], time.Time(e.One))
	jay.WriteTime(b[8:16], time.Time(e.Two))
	jay.WriteTime(b[16:24], time.Time(e.Three))
	jay.WriteTime(b[24:32], time.Time(e.Four))
	jay.WriteTime(b[32:40], time.Time(e.Five))
	jay.WriteTime(b[40:48], time.Time(e.Six))
	jay.WriteTime(b[48:56], time.Time(e.Seven))
	jay.WriteTime(b[56:64], time.Time(e.Eight))
	jay.WriteTime(b[64:72], time.Time(e.Nine))
	jay.WriteTime(b[72:80], time.Time(e.Ten))
	jay.WriteTime(b[80:], time.Time(e.Eleven))
	return
}

func (e *Eleven) UnmarshalJ(b []byte) error {
	if len(b) < 88 {
		return jay.ErrUnexpectedEOB
	}
	e.One = dateTime(jay.ReadTime(b[:8]))
	e.Two = dateTime(jay.ReadTime(b[8:16]))
	e.Three = dateTime(jay.ReadTime(b[16:24]))
	e.Four = dateTime(jay.ReadTime(b[24:32]))
	e.Five = dateTime(jay.ReadTime(b[32:40]))
	e.Six = dateTime(jay.ReadTime(b[40:48]))
	e.Seven = dateTime(jay.ReadTime(b[48:56]))
	e.Eight = dateTime(jay.ReadTime(b[56:64]))
	e.Nine = dateTime(jay.ReadTime(b[64:72]))
	e.Ten = dateTime(jay.ReadTime(b[72:80]))
	e.Eleven = dateTime(jay.ReadTime(b[80:]))
	return nil
}

func (t *Twelve) MarshalJ() (b []byte) {
	b = make([]byte, 96)
	jay.WriteTime(b[:8], time.Time(t.One))
	jay.WriteTime(b[8:16], time.Time(t.Two))
	jay.WriteTime(b[16:24], time.Time(t.Three))
	jay.WriteTime(b[24:32], time.Time(t.Four))
	jay.WriteTime(b[32:40], time.Time(t.Five))
	jay.WriteTime(b[40:48], time.Time(t.Six))
	jay.WriteTime(b[48:56], time.Time(t.Seven))
	jay.WriteTime(b[56:64], time.Time(t.Eight))
	jay.WriteTime(b[64:72], time.Time(t.Nine))
	jay.WriteTime(b[72:80], time.Time(t.Ten))
	jay.WriteTime(b[80:88], time.Time(t.Eleven))
	jay.WriteTime(b[88:], time.Time(t.Twelve))
	return
}

func (t *Twelve) UnmarshalJ(b []byte) error {
	if len(b) < 96 {
		return jay.ErrUnexpectedEOB
	}
	t.One = dateTime(jay.ReadTime(b[:8]))
	t.Two = dateTime(jay.ReadTime(b[8:16]))
	t.Three = dateTime(jay.ReadTime(b[16:24]))
	t.Four = dateTime(jay.ReadTime(b[24:32]))
	t.Five = dateTime(jay.ReadTime(b[32:40]))
	t.Six = dateTime(jay.ReadTime(b[40:48]))
	t.Seven = dateTime(jay.ReadTime(b[48:56]))
	t.Eight = dateTime(jay.ReadTime(b[56:64]))
	t.Nine = dateTime(jay.ReadTime(b[64:72]))
	t.Ten = dateTime(jay.ReadTime(b[72:80]))
	t.Eleven = dateTime(jay.ReadTime(b[80:88]))
	t.Twelve = dateTime(jay.ReadTime(b[88:]))
	return nil
}

func (t *Thirteen) MarshalJ() (b []byte) {
	b = make([]byte, 104)
	jay.WriteTime(b[:8], time.Time(t.One))
	jay.WriteTime(b[8:16], time.Time(t.Two))
	jay.WriteTime(b[16:24], time.Time(t.Three))
	jay.WriteTime(b[24:32], time.Time(t.Four))
	jay.WriteTime(b[32:40], time.Time(t.Five))
	jay.WriteTime(b[40:48], time.Time(t.Six))
	jay.WriteTime(b[48:56], time.Time(t.Seven))
	jay.WriteTime(b[56:64], time.Time(t.Eight))
	jay.WriteTime(b[64:72], time.Time(t.Nine))
	jay.WriteTime(b[72:80], time.Time(t.Ten))
	jay.WriteTime(b[80:88], time.Time(t.Eleven))
	jay.WriteTime(b[88:96], time.Time(t.Twelve))
	jay.WriteTime(b[96:], time.Time(t.Thirteen))
	return
}

func (t *Thirteen) UnmarshalJ(b []byte) error {
	if len(b) < 104 {
		return jay.ErrUnexpectedEOB
	}
	t.One = dateTime(jay.ReadTime(b[:8]))
	t.Two = dateTime(jay.ReadTime(b[8:16]))
	t.Three = dateTime(jay.ReadTime(b[16:24]))
	t.Four = dateTime(jay.ReadTime(b[24:32]))
	t.Five = dateTime(jay.ReadTime(b[32:40]))
	t.Six = dateTime(jay.ReadTime(b[40:48]))
	t.Seven = dateTime(jay.ReadTime(b[48:56]))
	t.Eight = dateTime(jay.ReadTime(b[56:64]))
	t.Nine = dateTime(jay.ReadTime(b[64:72]))
	t.Ten = dateTime(jay.ReadTime(b[72:80]))
	t.Eleven = dateTime(jay.ReadTime(b[80:88]))
	t.Twelve = dateTime(jay.ReadTime(b[88:96]))
	t.Thirteen = dateTime(jay.ReadTime(b[96:]))
	return nil
}

func (f *Fourteen) MarshalJ() (b []byte) {
	b = make([]byte, 112)
	jay.WriteTime(b[:8], time.Time(f.One))
	jay.WriteTime(b[8:16], time.Time(f.Two))
	jay.WriteTime(b[16:24], time.Time(f.Three))
	jay.WriteTime(b[24:32], time.Time(f.Four))
	jay.WriteTime(b[32:40], time.Time(f.Five))
	jay.WriteTime(b[40:48], time.Time(f.Six))
	jay.WriteTime(b[48:56], time.Time(f.Seven))
	jay.WriteTime(b[56:64], time.Time(f.Eight))
	jay.WriteTime(b[64:72], time.Time(f.Nine))
	jay.WriteTime(b[72:80], time.Time(f.Ten))
	jay.WriteTime(b[80:88], time.Time(f.Eleven))
	jay.WriteTime(b[88:96], time.Time(f.Twelve))
	jay.WriteTime(b[96:104], time.Time(f.Thirteen))
	jay.WriteTime(b[104:], time.Time(f.Fourteen))
	return
}

func (f *Fourteen) UnmarshalJ(b []byte) error {
	if len(b) < 112 {
		return jay.ErrUnexpectedEOB
	}
	f.One = dateTime(jay.ReadTime(b[:8]))
	f.Two = dateTime(jay.ReadTime(b[8:16]))
	f.Three = dateTime(jay.ReadTime(b[16:24]))
	f.Four = dateTime(jay.ReadTime(b[24:32]))
	f.Five = dateTime(jay.ReadTime(b[32:40]))
	f.Six = dateTime(jay.ReadTime(b[40:48]))
	f.Seven = dateTime(jay.ReadTime(b[48:56]))
	f.Eight = dateTime(jay.ReadTime(b[56:64]))
	f.Nine = dateTime(jay.ReadTime(b[64:72]))
	f.Ten = dateTime(jay.ReadTime(b[72:80]))
	f.Eleven = dateTime(jay.ReadTime(b[80:88]))
	f.Twelve = dateTime(jay.ReadTime(b[88:96]))
	f.Thirteen = dateTime(jay.ReadTime(b[96:104]))
	f.Fourteen = dateTime(jay.ReadTime(b[104:]))
	return nil
}

func (f *Fifteen) MarshalJ() (b []byte) {
	b = make([]byte, 120)
	jay.WriteTime(b[:8], time.Time(f.One))
	jay.WriteTime(b[8:16], time.Time(f.Two))
	jay.WriteTime(b[16:24], time.Time(f.Three))
	jay.WriteTime(b[24:32], time.Time(f.Four))
	jay.WriteTime(b[32:40], time.Time(f.Five))
	jay.WriteTime(b[40:48], time.Time(f.Six))
	jay.WriteTime(b[48:56], time.Time(f.Seven))
	jay.WriteTime(b[56:64], time.Time(f.Eight))
	jay.WriteTime(b[64:72], time.Time(f.Nine))
	jay.WriteTime(b[72:80], time.Time(f.Ten))
	jay.WriteTime(b[80:88], time.Time(f.Eleven))
	jay.WriteTime(b[88:96], time.Time(f.Twelve))
	jay.WriteTime(b[96:104], time.Time(f.Thirteen))
	jay.WriteTime(b[104:112], time.Time(f.Fourteen))
	jay.WriteTime(b[112:], time.Time(f.Fifteen))
	return
}

func (f *Fifteen) UnmarshalJ(b []byte) error {
	if len(b) < 120 {
		return jay.ErrUnexpectedEOB
	}
	f.One = dateTime(jay.ReadTime(b[:8]))
	f.Two = dateTime(jay.ReadTime(b[8:16]))
	f.Three = dateTime(jay.ReadTime(b[16:24]))
	f.Four = dateTime(jay.ReadTime(b[24:32]))
	f.Five = dateTime(jay.ReadTime(b[32:40]))
	f.Six = dateTime(jay.ReadTime(b[40:48]))
	f.Seven = dateTime(jay.ReadTime(b[48:56]))
	f.Eight = dateTime(jay.ReadTime(b[56:64]))
	f.Nine = dateTime(jay.ReadTime(b[64:72]))
	f.Ten = dateTime(jay.ReadTime(b[72:80]))
	f.Eleven = dateTime(jay.ReadTime(b[80:88]))
	f.Twelve = dateTime(jay.ReadTime(b[88:96]))
	f.Thirteen = dateTime(jay.ReadTime(b[96:104]))
	f.Fourteen = dateTime(jay.ReadTime(b[104:112]))
	f.Fifteen = dateTime(jay.ReadTime(b[112:]))
	return nil
}

func (s *Sixteen) MarshalJ() (b []byte) {
	b = make([]byte, 128)
	jay.WriteTime(b[:8], time.Time(s.One))
	jay.WriteTime(b[8:16], time.Time(s.Two))
	jay.WriteTime(b[16:24], time.Time(s.Three))
	jay.WriteTime(b[24:32], time.Time(s.Four))
	jay.WriteTime(b[32:40], time.Time(s.Five))
	jay.WriteTime(b[40:48], time.Time(s.Six))
	jay.WriteTime(b[48:56], time.Time(s.Seven))
	jay.WriteTime(b[56:64], time.Time(s.Eight))
	jay.WriteTime(b[64:72], time.Time(s.Nine))
	jay.WriteTime(b[72:80], time.Time(s.Ten))
	jay.WriteTime(b[80:88], time.Time(s.Eleven))
	jay.WriteTime(b[88:96], time.Time(s.Twelve))
	jay.WriteTime(b[96:104], time.Time(s.Thirteen))
	jay.WriteTime(b[104:112], time.Time(s.Fourteen))
	jay.WriteTime(b[112:120], time.Time(s.Fifteen))
	jay.WriteTime(b[120:], time.Time(s.Sixteen))
	return
}

func (s *Sixteen) UnmarshalJ(b []byte) error {
	if len(b) < 128 {
		return jay.ErrUnexpectedEOB
	}
	s.One = dateTime(jay.ReadTime(b[:8]))
	s.Two = dateTime(jay.ReadTime(b[8:16]))
	s.Three = dateTime(jay.ReadTime(b[16:24]))
	s.Four = dateTime(jay.ReadTime(b[24:32]))
	s.Five = dateTime(jay.ReadTime(b[32:40]))
	s.Six = dateTime(jay.ReadTime(b[40:48]))
	s.Seven = dateTime(jay.ReadTime(b[48:56]))
	s.Eight = dateTime(jay.ReadTime(b[56:64]))
	s.Nine = dateTime(jay.ReadTime(b[64:72]))
	s.Ten = dateTime(jay.ReadTime(b[72:80]))
	s.Eleven = dateTime(jay.ReadTime(b[80:88]))
	s.Twelve = dateTime(jay.ReadTime(b[88:96]))
	s.Thirteen = dateTime(jay.ReadTime(b[96:104]))
	s.Fourteen = dateTime(jay.ReadTime(b[104:112]))
	s.Fifteen = dateTime(jay.ReadTime(b[112:120]))
	s.Sixteen = dateTime(jay.ReadTime(b[120:]))
	return nil
}

func (s *Seventeen) MarshalJ() (b []byte) {
	b = make([]byte, 136)
	jay.WriteTime(b[:8], time.Time(s.One))
	jay.WriteTime(b[8:16], time.Time(s.Two))
	jay.WriteTime(b[16:24], time.Time(s.Three))
	jay.WriteTime(b[24:32], time.Time(s.Four))
	jay.WriteTime(b[32:40], time.Time(s.Five))
	jay.WriteTime(b[40:48], time.Time(s.Six))
	jay.WriteTime(b[48:56], time.Time(s.Seven))
	jay.WriteTime(b[56:64], time.Time(s.Eight))
	jay.WriteTime(b[64:72], time.Time(s.Nine))
	jay.WriteTime(b[72:80], time.Time(s.Ten))
	jay.WriteTime(b[80:88], time.Time(s.Eleven))
	jay.WriteTime(b[88:96], time.Time(s.Twelve))
	jay.WriteTime(b[96:104], time.Time(s.Thirteen))
	jay.WriteTime(b[104:112], time.Time(s.Fourteen))
	jay.WriteTime(b[112:120], time.Time(s.Fifteen))
	jay.WriteTime(b[120:128], time.Time(s.Sixteen))
	jay.WriteTime(b[128:], time.Time(s.Seventeen))
	return
}

func (s *Seventeen) UnmarshalJ(b []byte) error {
	if len(b) < 136 {
		return jay.ErrUnexpectedEOB
	}
	s.One = dateTime(jay.ReadTime(b[:8]))
	s.Two = dateTime(jay.ReadTime(b[8:16]))
	s.Three = dateTime(jay.ReadTime(b[16:24]))
	s.Four = dateTime(jay.ReadTime(b[24:32]))
	s.Five = dateTime(jay.ReadTime(b[32:40]))
	s.Six = dateTime(jay.ReadTime(b[40:48]))
	s.Seven = dateTime(jay.ReadTime(b[48:56]))
	s.Eight = dateTime(jay.ReadTime(b[56:64]))
	s.Nine = dateTime(jay.ReadTime(b[64:72]))
	s.Ten = dateTime(jay.ReadTime(b[72:80]))
	s.Eleven = dateTime(jay.ReadTime(b[80:88]))
	s.Twelve = dateTime(jay.ReadTime(b[88:96]))
	s.Thirteen = dateTime(jay.ReadTime(b[96:104]))
	s.Fourteen = dateTime(jay.ReadTime(b[104:112]))
	s.Fifteen = dateTime(jay.ReadTime(b[112:120]))
	s.Sixteen = dateTime(jay.ReadTime(b[120:128]))
	s.Seventeen = dateTime(jay.ReadTime(b[128:]))
	return nil
}

func (e *Eighteen) MarshalJ() (b []byte) {
	b = make([]byte, 144)
	jay.WriteTime(b[:8], time.Time(e.One))
	jay.WriteTime(b[8:16], time.Time(e.Two))
	jay.WriteTime(b[16:24], time.Time(e.Three))
	jay.WriteTime(b[24:32], time.Time(e.Four))
	jay.WriteTime(b[32:40], time.Time(e.Five))
	jay.WriteTime(b[40:48], time.Time(e.Six))
	jay.WriteTime(b[48:56], time.Time(e.Seven))
	jay.WriteTime(b[56:64], time.Time(e.Eight))
	jay.WriteTime(b[64:72], time.Time(e.Nine))
	jay.WriteTime(b[72:80], time.Time(e.Ten))
	jay.WriteTime(b[80:88], time.Time(e.Eleven))
	jay.WriteTime(b[88:96], time.Time(e.Twelve))
	jay.WriteTime(b[96:104], time.Time(e.Thirteen))
	jay.WriteTime(b[104:112], time.Time(e.Fourteen))
	jay.WriteTime(b[112:120], time.Time(e.Fifteen))
	jay.WriteTime(b[120:128], time.Time(e.Sixteen))
	jay.WriteTime(b[128:136], time.Time(e.Seventeen))
	jay.WriteTime(b[136:], time.Time(e.Eighteen))
	return
}

func (e *Eighteen) UnmarshalJ(b []byte) error {
	if len(b) < 144 {
		return jay.ErrUnexpectedEOB
	}
	e.One = dateTime(jay.ReadTime(b[:8]))
	e.Two = dateTime(jay.ReadTime(b[8:16]))
	e.Three = dateTime(jay.ReadTime(b[16:24]))
	e.Four = dateTime(jay.ReadTime(b[24:32]))
	e.Five = dateTime(jay.ReadTime(b[32:40]))
	e.Six = dateTime(jay.ReadTime(b[40:48]))
	e.Seven = dateTime(jay.ReadTime(b[48:56]))
	e.Eight = dateTime(jay.ReadTime(b[56:64]))
	e.Nine = dateTime(jay.ReadTime(b[64:72]))
	e.Ten = dateTime(jay.ReadTime(b[72:80]))
	e.Eleven = dateTime(jay.ReadTime(b[80:88]))
	e.Twelve = dateTime(jay.ReadTime(b[88:96]))
	e.Thirteen = dateTime(jay.ReadTime(b[96:104]))
	e.Fourteen = dateTime(jay.ReadTime(b[104:112]))
	e.Fifteen = dateTime(jay.ReadTime(b[112:120]))
	e.Sixteen = dateTime(jay.ReadTime(b[120:128]))
	e.Seventeen = dateTime(jay.ReadTime(b[128:136]))
	e.Eighteen = dateTime(jay.ReadTime(b[136:]))
	return nil
}

func (n *Nineteen) MarshalJ() (b []byte) {
	b = make([]byte, 152)
	jay.WriteTime(b[:8], time.Time(n.One))
	jay.WriteTime(b[8:16], time.Time(n.Two))
	jay.WriteTime(b[16:24], time.Time(n.Three))
	jay.WriteTime(b[24:32], time.Time(n.Four))
	jay.WriteTime(b[32:40], time.Time(n.Five))
	jay.WriteTime(b[40:48], time.Time(n.Six))
	jay.WriteTime(b[48:56], time.Time(n.Seven))
	jay.WriteTime(b[56:64], time.Time(n.Eight))
	jay.WriteTime(b[64:72], time.Time(n.Nine))
	jay.WriteTime(b[72:80], time.Time(n.Ten))
	jay.WriteTime(b[80:88], time.Time(n.Eleven))
	jay.WriteTime(b[88:96], time.Time(n.Twelve))
	jay.WriteTime(b[96:104], time.Time(n.Thirteen))
	jay.WriteTime(b[104:112], time.Time(n.Fourteen))
	jay.WriteTime(b[112:120], time.Time(n.Fifteen))
	jay.WriteTime(b[120:128], time.Time(n.Sixteen))
	jay.WriteTime(b[128:136], time.Time(n.Seventeen))
	jay.WriteTime(b[136:144], time.Time(n.Eighteen))
	jay.WriteTime(b[144:], time.Time(n.Nineteen))
	return
}

func (n *Nineteen) UnmarshalJ(b []byte) error {
	if len(b) < 152 {
		return jay.ErrUnexpectedEOB
	}
	n.One = dateTime(jay.ReadTime(b[:8]))
	n.Two = dateTime(jay.ReadTime(b[8:16]))
	n.Three = dateTime(jay.ReadTime(b[16:24]))
	n.Four = dateTime(jay.ReadTime(b[24:32]))
	n.Five = dateTime(jay.ReadTime(b[32:40]))
	n.Six = dateTime(jay.ReadTime(b[40:48]))
	n.Seven = dateTime(jay.ReadTime(b[48:56]))
	n.Eight = dateTime(jay.ReadTime(b[56:64]))
	n.Nine = dateTime(jay.ReadTime(b[64:72]))
	n.Ten = dateTime(jay.ReadTime(b[72:80]))
	n.Eleven = dateTime(jay.ReadTime(b[80:88]))
	n.Twelve = dateTime(jay.ReadTime(b[88:96]))
	n.Thirteen = dateTime(jay.ReadTime(b[96:104]))
	n.Fourteen = dateTime(jay.ReadTime(b[104:112]))
	n.Fifteen = dateTime(jay.ReadTime(b[112:120]))
	n.Sixteen = dateTime(jay.ReadTime(b[120:128]))
	n.Seventeen = dateTime(jay.ReadTime(b[128:136]))
	n.Eighteen = dateTime(jay.ReadTime(b[136:144]))
	n.Nineteen = dateTime(jay.ReadTime(b[144:]))
	return nil
}

func (t *Twenty) MarshalJ() (b []byte) {
	b = make([]byte, 160)
	jay.WriteTime(b[:8], time.Time(t.One))
	jay.WriteTime(b[8:16], time.Time(t.Two))
	jay.WriteTime(b[16:24], time.Time(t.Three))
	jay.WriteTime(b[24:32], time.Time(t.Four))
	jay.WriteTime(b[32:40], time.Time(t.Five))
	jay.WriteTime(b[40:48], time.Time(t.Six))
	jay.WriteTime(b[48:56], time.Time(t.Seven))
	jay.WriteTime(b[56:64], time.Time(t.Eight))
	jay.WriteTime(b[64:72], time.Time(t.Nine))
	jay.WriteTime(b[72:80], time.Time(t.Ten))
	jay.WriteTime(b[80:88], time.Time(t.Eleven))
	jay.WriteTime(b[88:96], time.Time(t.Twelve))
	jay.WriteTime(b[96:104], time.Time(t.Thirteen))
	jay.WriteTime(b[104:112], time.Time(t.Fourteen))
	jay.WriteTime(b[112:120], time.Time(t.Fifteen))
	jay.WriteTime(b[120:128], time.Time(t.Sixteen))
	jay.WriteTime(b[128:136], time.Time(t.Seventeen))
	jay.WriteTime(b[136:144], time.Time(t.Eighteen))
	jay.WriteTime(b[144:152], time.Time(t.Nineteen))
	jay.WriteTime(b[152:], time.Time(t.Twenty))
	return
}

func (t *Twenty) UnmarshalJ(b []byte) error {
	if len(b) < 160 {
		return jay.ErrUnexpectedEOB
	}
	t.One = dateTime(jay.ReadTime(b[:8]))
	t.Two = dateTime(jay.ReadTime(b[8:16]))
	t.Three = dateTime(jay.ReadTime(b[16:24]))
	t.Four = dateTime(jay.ReadTime(b[24:32]))
	t.Five = dateTime(jay.ReadTime(b[32:40]))
	t.Six = dateTime(jay.ReadTime(b[40:48]))
	t.Seven = dateTime(jay.ReadTime(b[48:56]))
	t.Eight = dateTime(jay.ReadTime(b[56:64]))
	t.Nine = dateTime(jay.ReadTime(b[64:72]))
	t.Ten = dateTime(jay.ReadTime(b[72:80]))
	t.Eleven = dateTime(jay.ReadTime(b[80:88]))
	t.Twelve = dateTime(jay.ReadTime(b[88:96]))
	t.Thirteen = dateTime(jay.ReadTime(b[96:104]))
	t.Fourteen = dateTime(jay.ReadTime(b[104:112]))
	t.Fifteen = dateTime(jay.ReadTime(b[112:120]))
	t.Sixteen = dateTime(jay.ReadTime(b[120:128]))
	t.Seventeen = dateTime(jay.ReadTime(b[128:136]))
	t.Eighteen = dateTime(jay.ReadTime(b[136:144]))
	t.Nineteen = dateTime(jay.ReadTime(b[144:152]))
	t.Twenty = dateTime(jay.ReadTime(b[152:]))
	return nil
}

func (t *TwentyOne) MarshalJ() (b []byte) {
	b = make([]byte, 168)
	jay.WriteTime(b[:8], time.Time(t.One))
	jay.WriteTime(b[8:16], time.Time(t.Two))
	jay.WriteTime(b[16:24], time.Time(t.Three))
	jay.WriteTime(b[24:32], time.Time(t.Four))
	jay.WriteTime(b[32:40], time.Time(t.Five))
	jay.WriteTime(b[40:48], time.Time(t.Six))
	jay.WriteTime(b[48:56], time.Time(t.Seven))
	jay.WriteTime(b[56:64], time.Time(t.Eight))
	jay.WriteTime(b[64:72], time.Time(t.Nine))
	jay.WriteTime(b[72:80], time.Time(t.Ten))
	jay.WriteTime(b[80:88], time.Time(t.Eleven))
	jay.WriteTime(b[88:96], time.Time(t.Twelve))
	jay.WriteTime(b[96:104], time.Time(t.Thirteen))
	jay.WriteTime(b[104:112], time.Time(t.Fourteen))
	jay.WriteTime(b[112:120], time.Time(t.Fifteen))
	jay.WriteTime(b[120:128], time.Time(t.Sixteen))
	jay.WriteTime(b[128:136], time.Time(t.Seventeen))
	jay.WriteTime(b[136:144], time.Time(t.Eighteen))
	jay.WriteTime(b[144:152], time.Time(t.Nineteen))
	jay.WriteTime(b[152:160], time.Time(t.Twenty))
	jay.WriteTime(b[160:], time.Time(t.TwentyOne))
	return
}

func (t *TwentyOne) UnmarshalJ(b []byte) error {
	if len(b) < 168 {
		return jay.ErrUnexpectedEOB
	}
	t.One = dateTime(jay.ReadTime(b[:8]))
	t.Two = dateTime(jay.ReadTime(b[8:16]))
	t.Three = dateTime(jay.ReadTime(b[16:24]))
	t.Four = dateTime(jay.ReadTime(b[24:32]))
	t.Five = dateTime(jay.ReadTime(b[32:40]))
	t.Six = dateTime(jay.ReadTime(b[40:48]))
	t.Seven = dateTime(jay.ReadTime(b[48:56]))
	t.Eight = dateTime(jay.ReadTime(b[56:64]))
	t.Nine = dateTime(jay.ReadTime(b[64:72]))
	t.Ten = dateTime(jay.ReadTime(b[72:80]))
	t.Eleven = dateTime(jay.ReadTime(b[80:88]))
	t.Twelve = dateTime(jay.ReadTime(b[88:96]))
	t.Thirteen = dateTime(jay.ReadTime(b[96:104]))
	t.Fourteen = dateTime(jay.ReadTime(b[104:112]))
	t.Fifteen = dateTime(jay.ReadTime(b[112:120]))
	t.Sixteen = dateTime(jay.ReadTime(b[120:128]))
	t.Seventeen = dateTime(jay.ReadTime(b[128:136]))
	t.Eighteen = dateTime(jay.ReadTime(b[136:144]))
	t.Nineteen = dateTime(jay.ReadTime(b[144:152]))
	t.Twenty = dateTime(jay.ReadTime(b[152:160]))
	t.TwentyOne = dateTime(jay.ReadTime(b[160:]))
	return nil
}

func (t *TwentyTwo) MarshalJ() (b []byte) {
	b = make([]byte, 176)
	jay.WriteTime(b[:8], time.Time(t.One))
	jay.WriteTime(b[8:16], time.Time(t.Two))
	jay.WriteTime(b[16:24], time.Time(t.Three))
	jay.WriteTime(b[24:32], time.Time(t.Four))
	jay.WriteTime(b[32:40], time.Time(t.Five))
	jay.WriteTime(b[40:48], time.Time(t.Six))
	jay.WriteTime(b[48:56], time.Time(t.Seven))
	jay.WriteTime(b[56:64], time.Time(t.Eight))
	jay.WriteTime(b[64:72], time.Time(t.Nine))
	jay.WriteTime(b[72:80], time.Time(t.Ten))
	jay.WriteTime(b[80:88], time.Time(t.Eleven))
	jay.WriteTime(b[88:96], time.Time(t.Twelve))
	jay.WriteTime(b[96:104], time.Time(t.Thirteen))
	jay.WriteTime(b[104:112], time.Time(t.Fourteen))
	jay.WriteTime(b[112:120], time.Time(t.Fifteen))
	jay.WriteTime(b[120:128], time.Time(t.Sixteen))
	jay.WriteTime(b[128:136], time.Time(t.Seventeen))
	jay.WriteTime(b[136:144], time.Time(t.Eighteen))
	jay.WriteTime(b[144:152], time.Time(t.Nineteen))
	jay.WriteTime(b[152:160], time.Time(t.Twenty))
	jay.WriteTime(b[160:168], time.Time(t.TwentyOne))
	jay.WriteTime(b[168:], time.Time(t.TwentyTwo))
	return
}

func (t *TwentyTwo) UnmarshalJ(b []byte) error {
	if len(b) < 176 {
		return jay.ErrUnexpectedEOB
	}
	t.One = dateTime(jay.ReadTime(b[:8]))
	t.Two = dateTime(jay.ReadTime(b[8:16]))
	t.Three = dateTime(jay.ReadTime(b[16:24]))
	t.Four = dateTime(jay.ReadTime(b[24:32]))
	t.Five = dateTime(jay.ReadTime(b[32:40]))
	t.Six = dateTime(jay.ReadTime(b[40:48]))
	t.Seven = dateTime(jay.ReadTime(b[48:56]))
	t.Eight = dateTime(jay.ReadTime(b[56:64]))
	t.Nine = dateTime(jay.ReadTime(b[64:72]))
	t.Ten = dateTime(jay.ReadTime(b[72:80]))
	t.Eleven = dateTime(jay.ReadTime(b[80:88]))
	t.Twelve = dateTime(jay.ReadTime(b[88:96]))
	t.Thirteen = dateTime(jay.ReadTime(b[96:104]))
	t.Fourteen = dateTime(jay.ReadTime(b[104:112]))
	t.Fifteen = dateTime(jay.ReadTime(b[112:120]))
	t.Sixteen = dateTime(jay.ReadTime(b[120:128]))
	t.Seventeen = dateTime(jay.ReadTime(b[128:136]))
	t.Eighteen = dateTime(jay.ReadTime(b[136:144]))
	t.Nineteen = dateTime(jay.ReadTime(b[144:152]))
	t.Twenty = dateTime(jay.ReadTime(b[152:160]))
	t.TwentyOne = dateTime(jay.ReadTime(b[160:168]))
	t.TwentyTwo = dateTime(jay.ReadTime(b[168:]))
	return nil
}

func (t *TwentyThree) MarshalJ() (b []byte) {
	b = make([]byte, 184)
	jay.WriteTime(b[:8], time.Time(t.One))
	jay.WriteTime(b[8:16], time.Time(t.Two))
	jay.WriteTime(b[16:24], time.Time(t.Three))
	jay.WriteTime(b[24:32], time.Time(t.Four))
	jay.WriteTime(b[32:40], time.Time(t.Five))
	jay.WriteTime(b[40:48], time.Time(t.Six))
	jay.WriteTime(b[48:56], time.Time(t.Seven))
	jay.WriteTime(b[56:64], time.Time(t.Eight))
	jay.WriteTime(b[64:72], time.Time(t.Nine))
	jay.WriteTime(b[72:80], time.Time(t.Ten))
	jay.WriteTime(b[80:88], time.Time(t.Eleven))
	jay.WriteTime(b[88:96], time.Time(t.Twelve))
	jay.WriteTime(b[96:104], time.Time(t.Thirteen))
	jay.WriteTime(b[104:112], time.Time(t.Fourteen))
	jay.WriteTime(b[112:120], time.Time(t.Fifteen))
	jay.WriteTime(b[120:128], time.Time(t.Sixteen))
	jay.WriteTime(b[128:136], time.Time(t.Seventeen))
	jay.WriteTime(b[136:144], time.Time(t.Eighteen))
	jay.WriteTime(b[144:152], time.Time(t.Nineteen))
	jay.WriteTime(b[152:160], time.Time(t.Twenty))
	jay.WriteTime(b[160:168], time.Time(t.TwentyOne))
	jay.WriteTime(b[168:176], time.Time(t.TwentyTwo))
	jay.WriteTime(b[176:], time.Time(t.TwentyThree))
	return
}

func (t *TwentyThree) UnmarshalJ(b []byte) error {
	if len(b) < 184 {
		return jay.ErrUnexpectedEOB
	}
	t.One = dateTime(jay.ReadTime(b[:8]))
	t.Two = dateTime(jay.ReadTime(b[8:16]))
	t.Three = dateTime(jay.ReadTime(b[16:24]))
	t.Four = dateTime(jay.ReadTime(b[24:32]))
	t.Five = dateTime(jay.ReadTime(b[32:40]))
	t.Six = dateTime(jay.ReadTime(b[40:48]))
	t.Seven = dateTime(jay.ReadTime(b[48:56]))
	t.Eight = dateTime(jay.ReadTime(b[56:64]))
	t.Nine = dateTime(jay.ReadTime(b[64:72]))
	t.Ten = dateTime(jay.ReadTime(b[72:80]))
	t.Eleven = dateTime(jay.ReadTime(b[80:88]))
	t.Twelve = dateTime(jay.ReadTime(b[88:96]))
	t.Thirteen = dateTime(jay.ReadTime(b[96:104]))
	t.Fourteen = dateTime(jay.ReadTime(b[104:112]))
	t.Fifteen = dateTime(jay.ReadTime(b[112:120]))
	t.Sixteen = dateTime(jay.ReadTime(b[120:128]))
	t.Seventeen = dateTime(jay.ReadTime(b[128:136]))
	t.Eighteen = dateTime(jay.ReadTime(b[136:144]))
	t.Nineteen = dateTime(jay.ReadTime(b[144:152]))
	t.Twenty = dateTime(jay.ReadTime(b[152:160]))
	t.TwentyOne = dateTime(jay.ReadTime(b[160:168]))
	t.TwentyTwo = dateTime(jay.ReadTime(b[168:176]))
	t.TwentyThree = dateTime(jay.ReadTime(b[176:]))
	return nil
}
