// Code generated by Jay; DO NOT EDIT. Tool documentation available at: https://github.com/speedyhoon/jay

package main

import "github.com/speedyhoon/jay"

func (o *One) MarshalJ() (b []byte) {
	l0 := len(o.One)
	b = make([]byte, 1+l0)
	jay.WriteString(b, o.One, l0)
	return
}

func (o *One) UnmarshalJ(b []byte) error {
	if len(b) < 1 {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b, &o.One)
}

func (t *Two) MarshalJ() (b []byte) {
	l0, l1 := len(t.One), len(t.Two)
	b = make([]byte, 2+l0+l1)
	at := jay.WriteStringAt(b, t.One, l0, 0)
	jay.WriteString(b[at:], t.Two, l1)
	return
}

func (t *Two) UnmarshalJ(b []byte) error {
	if len(b) < 2 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	t.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &t.Two)
}

func (t *Three) MarshalJ() (b []byte) {
	l0, l1, l2 := len(t.One), len(t.Two), len(t.Three)
	b = make([]byte, 3+l0+l1+l2)
	at := jay.WriteStringAt(b, t.One, l0, 0)
	at = jay.WriteStringAt(b[at:], t.Two, l1, at)
	jay.WriteString(b[at:], t.Three, l2)
	return
}

func (t *Three) UnmarshalJ(b []byte) error {
	if len(b) < 3 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	t.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &t.Three)
}

func (f *Four) MarshalJ() (b []byte) {
	l0, l1, l2, l3 := len(f.One), len(f.Two), len(f.Three), len(f.Four)
	b = make([]byte, 4+l0+l1+l2+l3)
	at := jay.WriteStringAt(b, f.One, l0, 0)
	at = jay.WriteStringAt(b[at:], f.Two, l1, at)
	at = jay.WriteStringAt(b[at:], f.Three, l2, at)
	jay.WriteString(b[at:], f.Four, l3)
	return
}

func (f *Four) UnmarshalJ(b []byte) error {
	if len(b) < 4 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	f.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &f.Four)
}

func (f *Five) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4 := len(f.One), len(f.Two), len(f.Three), len(f.Four), len(f.Five)
	b = make([]byte, 5+l0+l1+l2+l3+l4)
	at := jay.WriteStringAt(b, f.One, l0, 0)
	at = jay.WriteStringAt(b[at:], f.Two, l1, at)
	at = jay.WriteStringAt(b[at:], f.Three, l2, at)
	at = jay.WriteStringAt(b[at:], f.Four, l3, at)
	jay.WriteString(b[at:], f.Five, l4)
	return
}

func (f *Five) UnmarshalJ(b []byte) error {
	if len(b) < 5 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	f.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &f.Five)
}

func (s *Six) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5 := len(s.One), len(s.Two), len(s.Three), len(s.Four), len(s.Five), len(s.Six)
	b = make([]byte, 6+l0+l1+l2+l3+l4+l5)
	at := jay.WriteStringAt(b, s.One, l0, 0)
	at = jay.WriteStringAt(b[at:], s.Two, l1, at)
	at = jay.WriteStringAt(b[at:], s.Three, l2, at)
	at = jay.WriteStringAt(b[at:], s.Four, l3, at)
	at = jay.WriteStringAt(b[at:], s.Five, l4, at)
	jay.WriteString(b[at:], s.Six, l5)
	return
}

func (s *Six) UnmarshalJ(b []byte) error {
	if len(b) < 6 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	s.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &s.Six)
}

func (s *Seven) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6 := len(s.One), len(s.Two), len(s.Three), len(s.Four), len(s.Five), len(s.Six), len(s.Seven)
	b = make([]byte, 7+l0+l1+l2+l3+l4+l5+l6)
	at := jay.WriteStringAt(b, s.One, l0, 0)
	at = jay.WriteStringAt(b[at:], s.Two, l1, at)
	at = jay.WriteStringAt(b[at:], s.Three, l2, at)
	at = jay.WriteStringAt(b[at:], s.Four, l3, at)
	at = jay.WriteStringAt(b[at:], s.Five, l4, at)
	at = jay.WriteStringAt(b[at:], s.Six, l5, at)
	jay.WriteString(b[at:], s.Seven, l6)
	return
}

func (s *Seven) UnmarshalJ(b []byte) error {
	if len(b) < 7 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	s.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &s.Seven)
}

func (e *Eight) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7 := len(e.One), len(e.Two), len(e.Three), len(e.Four), len(e.Five), len(e.Six), len(e.Seven), len(e.Eight)
	b = make([]byte, 8+l0+l1+l2+l3+l4+l5+l6+l7)
	at := jay.WriteStringAt(b, e.One, l0, 0)
	at = jay.WriteStringAt(b[at:], e.Two, l1, at)
	at = jay.WriteStringAt(b[at:], e.Three, l2, at)
	at = jay.WriteStringAt(b[at:], e.Four, l3, at)
	at = jay.WriteStringAt(b[at:], e.Five, l4, at)
	at = jay.WriteStringAt(b[at:], e.Six, l5, at)
	at = jay.WriteStringAt(b[at:], e.Seven, l6, at)
	jay.WriteString(b[at:], e.Eight, l7)
	return
}

func (e *Eight) UnmarshalJ(b []byte) error {
	if len(b) < 8 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	e.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Seven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &e.Eight)
}

func (n *Nine) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8 := len(n.One), len(n.Two), len(n.Three), len(n.Four), len(n.Five), len(n.Six), len(n.Seven), len(n.Eight), len(n.Nine)
	b = make([]byte, 9+l0+l1+l2+l3+l4+l5+l6+l7+l8)
	at := jay.WriteStringAt(b, n.One, l0, 0)
	at = jay.WriteStringAt(b[at:], n.Two, l1, at)
	at = jay.WriteStringAt(b[at:], n.Three, l2, at)
	at = jay.WriteStringAt(b[at:], n.Four, l3, at)
	at = jay.WriteStringAt(b[at:], n.Five, l4, at)
	at = jay.WriteStringAt(b[at:], n.Six, l5, at)
	at = jay.WriteStringAt(b[at:], n.Seven, l6, at)
	at = jay.WriteStringAt(b[at:], n.Eight, l7, at)
	jay.WriteString(b[at:], n.Nine, l8)
	return
}

func (n *Nine) UnmarshalJ(b []byte) error {
	if len(b) < 9 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	n.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Seven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Eight, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &n.Nine)
}

func (t *Ten) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9 := len(t.One), len(t.Two), len(t.Three), len(t.Four), len(t.Five), len(t.Six), len(t.Seven), len(t.Eight), len(t.Nine), len(t.Ten)
	b = make([]byte, 10+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9)
	at := jay.WriteStringAt(b, t.One, l0, 0)
	at = jay.WriteStringAt(b[at:], t.Two, l1, at)
	at = jay.WriteStringAt(b[at:], t.Three, l2, at)
	at = jay.WriteStringAt(b[at:], t.Four, l3, at)
	at = jay.WriteStringAt(b[at:], t.Five, l4, at)
	at = jay.WriteStringAt(b[at:], t.Six, l5, at)
	at = jay.WriteStringAt(b[at:], t.Seven, l6, at)
	at = jay.WriteStringAt(b[at:], t.Eight, l7, at)
	at = jay.WriteStringAt(b[at:], t.Nine, l8, at)
	jay.WriteString(b[at:], t.Ten, l9)
	return
}

func (t *Ten) UnmarshalJ(b []byte) error {
	if len(b) < 10 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	t.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Seven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eight, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Nine, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &t.Ten)
}

func (e *Eleven) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10 := len(e.One), len(e.Two), len(e.Three), len(e.Four), len(e.Five), len(e.Six), len(e.Seven), len(e.Eight), len(e.Nine), len(e.Ten), len(e.Eleven)
	b = make([]byte, 11+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10)
	at := jay.WriteStringAt(b, e.One, l0, 0)
	at = jay.WriteStringAt(b[at:], e.Two, l1, at)
	at = jay.WriteStringAt(b[at:], e.Three, l2, at)
	at = jay.WriteStringAt(b[at:], e.Four, l3, at)
	at = jay.WriteStringAt(b[at:], e.Five, l4, at)
	at = jay.WriteStringAt(b[at:], e.Six, l5, at)
	at = jay.WriteStringAt(b[at:], e.Seven, l6, at)
	at = jay.WriteStringAt(b[at:], e.Eight, l7, at)
	at = jay.WriteStringAt(b[at:], e.Nine, l8, at)
	at = jay.WriteStringAt(b[at:], e.Ten, l9, at)
	jay.WriteString(b[at:], e.Eleven, l10)
	return
}

func (e *Eleven) UnmarshalJ(b []byte) error {
	if len(b) < 11 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	e.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Seven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Eight, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Nine, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Ten, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &e.Eleven)
}

func (t *Twelve) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11 := len(t.One), len(t.Two), len(t.Three), len(t.Four), len(t.Five), len(t.Six), len(t.Seven), len(t.Eight), len(t.Nine), len(t.Ten), len(t.Eleven), len(t.Twelve)
	b = make([]byte, 12+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11)
	at := jay.WriteStringAt(b, t.One, l0, 0)
	at = jay.WriteStringAt(b[at:], t.Two, l1, at)
	at = jay.WriteStringAt(b[at:], t.Three, l2, at)
	at = jay.WriteStringAt(b[at:], t.Four, l3, at)
	at = jay.WriteStringAt(b[at:], t.Five, l4, at)
	at = jay.WriteStringAt(b[at:], t.Six, l5, at)
	at = jay.WriteStringAt(b[at:], t.Seven, l6, at)
	at = jay.WriteStringAt(b[at:], t.Eight, l7, at)
	at = jay.WriteStringAt(b[at:], t.Nine, l8, at)
	at = jay.WriteStringAt(b[at:], t.Ten, l9, at)
	at = jay.WriteStringAt(b[at:], t.Eleven, l10, at)
	jay.WriteString(b[at:], t.Twelve, l11)
	return
}

func (t *Twelve) UnmarshalJ(b []byte) error {
	if len(b) < 12 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	t.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Seven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eight, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Nine, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Ten, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eleven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &t.Twelve)
}

func (t *Thirteen) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12 := len(t.One), len(t.Two), len(t.Three), len(t.Four), len(t.Five), len(t.Six), len(t.Seven), len(t.Eight), len(t.Nine), len(t.Ten), len(t.Eleven), len(t.Twelve), len(t.Thirteen)
	b = make([]byte, 13+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12)
	at := jay.WriteStringAt(b, t.One, l0, 0)
	at = jay.WriteStringAt(b[at:], t.Two, l1, at)
	at = jay.WriteStringAt(b[at:], t.Three, l2, at)
	at = jay.WriteStringAt(b[at:], t.Four, l3, at)
	at = jay.WriteStringAt(b[at:], t.Five, l4, at)
	at = jay.WriteStringAt(b[at:], t.Six, l5, at)
	at = jay.WriteStringAt(b[at:], t.Seven, l6, at)
	at = jay.WriteStringAt(b[at:], t.Eight, l7, at)
	at = jay.WriteStringAt(b[at:], t.Nine, l8, at)
	at = jay.WriteStringAt(b[at:], t.Ten, l9, at)
	at = jay.WriteStringAt(b[at:], t.Eleven, l10, at)
	at = jay.WriteStringAt(b[at:], t.Twelve, l11, at)
	jay.WriteString(b[at:], t.Thirteen, l12)
	return
}

func (t *Thirteen) UnmarshalJ(b []byte) error {
	if len(b) < 13 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	t.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Seven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eight, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Nine, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Ten, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eleven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Twelve, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &t.Thirteen)
}

func (f *Fourteen) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13 := len(f.One), len(f.Two), len(f.Three), len(f.Four), len(f.Five), len(f.Six), len(f.Seven), len(f.Eight), len(f.Nine), len(f.Ten), len(f.Eleven), len(f.Twelve), len(f.Thirteen), len(f.Fourteen)
	b = make([]byte, 14+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13)
	at := jay.WriteStringAt(b, f.One, l0, 0)
	at = jay.WriteStringAt(b[at:], f.Two, l1, at)
	at = jay.WriteStringAt(b[at:], f.Three, l2, at)
	at = jay.WriteStringAt(b[at:], f.Four, l3, at)
	at = jay.WriteStringAt(b[at:], f.Five, l4, at)
	at = jay.WriteStringAt(b[at:], f.Six, l5, at)
	at = jay.WriteStringAt(b[at:], f.Seven, l6, at)
	at = jay.WriteStringAt(b[at:], f.Eight, l7, at)
	at = jay.WriteStringAt(b[at:], f.Nine, l8, at)
	at = jay.WriteStringAt(b[at:], f.Ten, l9, at)
	at = jay.WriteStringAt(b[at:], f.Eleven, l10, at)
	at = jay.WriteStringAt(b[at:], f.Twelve, l11, at)
	at = jay.WriteStringAt(b[at:], f.Thirteen, l12, at)
	jay.WriteString(b[at:], f.Fourteen, l13)
	return
}

func (f *Fourteen) UnmarshalJ(b []byte) error {
	if len(b) < 14 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	f.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Seven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Eight, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Nine, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Ten, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Eleven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Twelve, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Thirteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &f.Fourteen)
}

func (f *Fifteen) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14 := len(f.One), len(f.Two), len(f.Three), len(f.Four), len(f.Five), len(f.Six), len(f.Seven), len(f.Eight), len(f.Nine), len(f.Ten), len(f.Eleven), len(f.Twelve), len(f.Thirteen), len(f.Fourteen), len(f.Fifteen)
	b = make([]byte, 15+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14)
	at := jay.WriteStringAt(b, f.One, l0, 0)
	at = jay.WriteStringAt(b[at:], f.Two, l1, at)
	at = jay.WriteStringAt(b[at:], f.Three, l2, at)
	at = jay.WriteStringAt(b[at:], f.Four, l3, at)
	at = jay.WriteStringAt(b[at:], f.Five, l4, at)
	at = jay.WriteStringAt(b[at:], f.Six, l5, at)
	at = jay.WriteStringAt(b[at:], f.Seven, l6, at)
	at = jay.WriteStringAt(b[at:], f.Eight, l7, at)
	at = jay.WriteStringAt(b[at:], f.Nine, l8, at)
	at = jay.WriteStringAt(b[at:], f.Ten, l9, at)
	at = jay.WriteStringAt(b[at:], f.Eleven, l10, at)
	at = jay.WriteStringAt(b[at:], f.Twelve, l11, at)
	at = jay.WriteStringAt(b[at:], f.Thirteen, l12, at)
	at = jay.WriteStringAt(b[at:], f.Fourteen, l13, at)
	jay.WriteString(b[at:], f.Fifteen, l14)
	return
}

func (f *Fifteen) UnmarshalJ(b []byte) error {
	if len(b) < 15 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	f.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Seven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Eight, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Nine, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Ten, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Eleven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Twelve, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Thirteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	f.Fourteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &f.Fifteen)
}

func (s *Sixteen) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15 := len(s.One), len(s.Two), len(s.Three), len(s.Four), len(s.Five), len(s.Six), len(s.Seven), len(s.Eight), len(s.Nine), len(s.Ten), len(s.Eleven), len(s.Twelve), len(s.Thirteen), len(s.Fourteen), len(s.Fifteen), len(s.Sixteen)
	b = make([]byte, 16+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15)
	at := jay.WriteStringAt(b, s.One, l0, 0)
	at = jay.WriteStringAt(b[at:], s.Two, l1, at)
	at = jay.WriteStringAt(b[at:], s.Three, l2, at)
	at = jay.WriteStringAt(b[at:], s.Four, l3, at)
	at = jay.WriteStringAt(b[at:], s.Five, l4, at)
	at = jay.WriteStringAt(b[at:], s.Six, l5, at)
	at = jay.WriteStringAt(b[at:], s.Seven, l6, at)
	at = jay.WriteStringAt(b[at:], s.Eight, l7, at)
	at = jay.WriteStringAt(b[at:], s.Nine, l8, at)
	at = jay.WriteStringAt(b[at:], s.Ten, l9, at)
	at = jay.WriteStringAt(b[at:], s.Eleven, l10, at)
	at = jay.WriteStringAt(b[at:], s.Twelve, l11, at)
	at = jay.WriteStringAt(b[at:], s.Thirteen, l12, at)
	at = jay.WriteStringAt(b[at:], s.Fourteen, l13, at)
	at = jay.WriteStringAt(b[at:], s.Fifteen, l14, at)
	jay.WriteString(b[at:], s.Sixteen, l15)
	return
}

func (s *Sixteen) UnmarshalJ(b []byte) error {
	if len(b) < 16 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	s.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Seven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Eight, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Nine, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Ten, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Eleven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Twelve, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Thirteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Fourteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Fifteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &s.Sixteen)
}

func (s *Seventeen) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16 := len(s.One), len(s.Two), len(s.Three), len(s.Four), len(s.Five), len(s.Six), len(s.Seven), len(s.Eight), len(s.Nine), len(s.Ten), len(s.Eleven), len(s.Twelve), len(s.Thirteen), len(s.Fourteen), len(s.Fifteen), len(s.Sixteen), len(s.Seventeen)
	b = make([]byte, 17+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16)
	at := jay.WriteStringAt(b, s.One, l0, 0)
	at = jay.WriteStringAt(b[at:], s.Two, l1, at)
	at = jay.WriteStringAt(b[at:], s.Three, l2, at)
	at = jay.WriteStringAt(b[at:], s.Four, l3, at)
	at = jay.WriteStringAt(b[at:], s.Five, l4, at)
	at = jay.WriteStringAt(b[at:], s.Six, l5, at)
	at = jay.WriteStringAt(b[at:], s.Seven, l6, at)
	at = jay.WriteStringAt(b[at:], s.Eight, l7, at)
	at = jay.WriteStringAt(b[at:], s.Nine, l8, at)
	at = jay.WriteStringAt(b[at:], s.Ten, l9, at)
	at = jay.WriteStringAt(b[at:], s.Eleven, l10, at)
	at = jay.WriteStringAt(b[at:], s.Twelve, l11, at)
	at = jay.WriteStringAt(b[at:], s.Thirteen, l12, at)
	at = jay.WriteStringAt(b[at:], s.Fourteen, l13, at)
	at = jay.WriteStringAt(b[at:], s.Fifteen, l14, at)
	at = jay.WriteStringAt(b[at:], s.Sixteen, l15, at)
	jay.WriteString(b[at:], s.Seventeen, l16)
	return
}

func (s *Seventeen) UnmarshalJ(b []byte) error {
	if len(b) < 17 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	s.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Seven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Eight, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Nine, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Ten, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Eleven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Twelve, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Thirteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Fourteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Fifteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	s.Sixteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &s.Seventeen)
}

func (e *Eighteen) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17 := len(e.One), len(e.Two), len(e.Three), len(e.Four), len(e.Five), len(e.Six), len(e.Seven), len(e.Eight), len(e.Nine), len(e.Ten), len(e.Eleven), len(e.Twelve), len(e.Thirteen), len(e.Fourteen), len(e.Fifteen), len(e.Sixteen), len(e.Seventeen), len(e.Eighteen)
	b = make([]byte, 18+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17)
	at := jay.WriteStringAt(b, e.One, l0, 0)
	at = jay.WriteStringAt(b[at:], e.Two, l1, at)
	at = jay.WriteStringAt(b[at:], e.Three, l2, at)
	at = jay.WriteStringAt(b[at:], e.Four, l3, at)
	at = jay.WriteStringAt(b[at:], e.Five, l4, at)
	at = jay.WriteStringAt(b[at:], e.Six, l5, at)
	at = jay.WriteStringAt(b[at:], e.Seven, l6, at)
	at = jay.WriteStringAt(b[at:], e.Eight, l7, at)
	at = jay.WriteStringAt(b[at:], e.Nine, l8, at)
	at = jay.WriteStringAt(b[at:], e.Ten, l9, at)
	at = jay.WriteStringAt(b[at:], e.Eleven, l10, at)
	at = jay.WriteStringAt(b[at:], e.Twelve, l11, at)
	at = jay.WriteStringAt(b[at:], e.Thirteen, l12, at)
	at = jay.WriteStringAt(b[at:], e.Fourteen, l13, at)
	at = jay.WriteStringAt(b[at:], e.Fifteen, l14, at)
	at = jay.WriteStringAt(b[at:], e.Sixteen, l15, at)
	at = jay.WriteStringAt(b[at:], e.Seventeen, l16, at)
	jay.WriteString(b[at:], e.Eighteen, l17)
	return
}

func (e *Eighteen) UnmarshalJ(b []byte) error {
	if len(b) < 18 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	e.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Seven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Eight, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Nine, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Ten, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Eleven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Twelve, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Thirteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Fourteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Fifteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Sixteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	e.Seventeen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &e.Eighteen)
}

func (n *Nineteen) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18 := len(n.One), len(n.Two), len(n.Three), len(n.Four), len(n.Five), len(n.Six), len(n.Seven), len(n.Eight), len(n.Nine), len(n.Ten), len(n.Eleven), len(n.Twelve), len(n.Thirteen), len(n.Fourteen), len(n.Fifteen), len(n.Sixteen), len(n.Seventeen), len(n.Eighteen), len(n.Nineteen)
	b = make([]byte, 19+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17+l18)
	at := jay.WriteStringAt(b, n.One, l0, 0)
	at = jay.WriteStringAt(b[at:], n.Two, l1, at)
	at = jay.WriteStringAt(b[at:], n.Three, l2, at)
	at = jay.WriteStringAt(b[at:], n.Four, l3, at)
	at = jay.WriteStringAt(b[at:], n.Five, l4, at)
	at = jay.WriteStringAt(b[at:], n.Six, l5, at)
	at = jay.WriteStringAt(b[at:], n.Seven, l6, at)
	at = jay.WriteStringAt(b[at:], n.Eight, l7, at)
	at = jay.WriteStringAt(b[at:], n.Nine, l8, at)
	at = jay.WriteStringAt(b[at:], n.Ten, l9, at)
	at = jay.WriteStringAt(b[at:], n.Eleven, l10, at)
	at = jay.WriteStringAt(b[at:], n.Twelve, l11, at)
	at = jay.WriteStringAt(b[at:], n.Thirteen, l12, at)
	at = jay.WriteStringAt(b[at:], n.Fourteen, l13, at)
	at = jay.WriteStringAt(b[at:], n.Fifteen, l14, at)
	at = jay.WriteStringAt(b[at:], n.Sixteen, l15, at)
	at = jay.WriteStringAt(b[at:], n.Seventeen, l16, at)
	at = jay.WriteStringAt(b[at:], n.Eighteen, l17, at)
	jay.WriteString(b[at:], n.Nineteen, l18)
	return
}

func (n *Nineteen) UnmarshalJ(b []byte) error {
	if len(b) < 19 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	n.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Seven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Eight, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Nine, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Ten, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Eleven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Twelve, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Thirteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Fourteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Fifteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Sixteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Seventeen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	n.Eighteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &n.Nineteen)
}

func (t *Twenty) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18, l19 := len(t.One), len(t.Two), len(t.Three), len(t.Four), len(t.Five), len(t.Six), len(t.Seven), len(t.Eight), len(t.Nine), len(t.Ten), len(t.Eleven), len(t.Twelve), len(t.Thirteen), len(t.Fourteen), len(t.Fifteen), len(t.Sixteen), len(t.Seventeen), len(t.Eighteen), len(t.Nineteen), len(t.Twenty)
	b = make([]byte, 20+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17+l18+l19)
	at := jay.WriteStringAt(b, t.One, l0, 0)
	at = jay.WriteStringAt(b[at:], t.Two, l1, at)
	at = jay.WriteStringAt(b[at:], t.Three, l2, at)
	at = jay.WriteStringAt(b[at:], t.Four, l3, at)
	at = jay.WriteStringAt(b[at:], t.Five, l4, at)
	at = jay.WriteStringAt(b[at:], t.Six, l5, at)
	at = jay.WriteStringAt(b[at:], t.Seven, l6, at)
	at = jay.WriteStringAt(b[at:], t.Eight, l7, at)
	at = jay.WriteStringAt(b[at:], t.Nine, l8, at)
	at = jay.WriteStringAt(b[at:], t.Ten, l9, at)
	at = jay.WriteStringAt(b[at:], t.Eleven, l10, at)
	at = jay.WriteStringAt(b[at:], t.Twelve, l11, at)
	at = jay.WriteStringAt(b[at:], t.Thirteen, l12, at)
	at = jay.WriteStringAt(b[at:], t.Fourteen, l13, at)
	at = jay.WriteStringAt(b[at:], t.Fifteen, l14, at)
	at = jay.WriteStringAt(b[at:], t.Sixteen, l15, at)
	at = jay.WriteStringAt(b[at:], t.Seventeen, l16, at)
	at = jay.WriteStringAt(b[at:], t.Eighteen, l17, at)
	at = jay.WriteStringAt(b[at:], t.Nineteen, l18, at)
	jay.WriteString(b[at:], t.Twenty, l19)
	return
}

func (t *Twenty) UnmarshalJ(b []byte) error {
	if len(b) < 20 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	t.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Seven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eight, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Nine, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Ten, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eleven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Twelve, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Thirteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Fourteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Fifteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Sixteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Seventeen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eighteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Nineteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &t.Twenty)
}

func (t *TwentyOne) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18, l19, l20 := len(t.One), len(t.Two), len(t.Three), len(t.Four), len(t.Five), len(t.Six), len(t.Seven), len(t.Eight), len(t.Nine), len(t.Ten), len(t.Eleven), len(t.Twelve), len(t.Thirteen), len(t.Fourteen), len(t.Fifteen), len(t.Sixteen), len(t.Seventeen), len(t.Eighteen), len(t.Nineteen), len(t.Twenty), len(t.TwentyOne)
	b = make([]byte, 21+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17+l18+l19+l20)
	at := jay.WriteStringAt(b, t.One, l0, 0)
	at = jay.WriteStringAt(b[at:], t.Two, l1, at)
	at = jay.WriteStringAt(b[at:], t.Three, l2, at)
	at = jay.WriteStringAt(b[at:], t.Four, l3, at)
	at = jay.WriteStringAt(b[at:], t.Five, l4, at)
	at = jay.WriteStringAt(b[at:], t.Six, l5, at)
	at = jay.WriteStringAt(b[at:], t.Seven, l6, at)
	at = jay.WriteStringAt(b[at:], t.Eight, l7, at)
	at = jay.WriteStringAt(b[at:], t.Nine, l8, at)
	at = jay.WriteStringAt(b[at:], t.Ten, l9, at)
	at = jay.WriteStringAt(b[at:], t.Eleven, l10, at)
	at = jay.WriteStringAt(b[at:], t.Twelve, l11, at)
	at = jay.WriteStringAt(b[at:], t.Thirteen, l12, at)
	at = jay.WriteStringAt(b[at:], t.Fourteen, l13, at)
	at = jay.WriteStringAt(b[at:], t.Fifteen, l14, at)
	at = jay.WriteStringAt(b[at:], t.Sixteen, l15, at)
	at = jay.WriteStringAt(b[at:], t.Seventeen, l16, at)
	at = jay.WriteStringAt(b[at:], t.Eighteen, l17, at)
	at = jay.WriteStringAt(b[at:], t.Nineteen, l18, at)
	at = jay.WriteStringAt(b[at:], t.Twenty, l19, at)
	jay.WriteString(b[at:], t.TwentyOne, l20)
	return
}

func (t *TwentyOne) UnmarshalJ(b []byte) error {
	if len(b) < 21 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	t.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Seven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eight, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Nine, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Ten, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eleven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Twelve, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Thirteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Fourteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Fifteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Sixteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Seventeen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eighteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Nineteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Twenty, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &t.TwentyOne)
}

func (t *TwentyTwo) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18, l19, l20, l21 := len(t.One), len(t.Two), len(t.Three), len(t.Four), len(t.Five), len(t.Six), len(t.Seven), len(t.Eight), len(t.Nine), len(t.Ten), len(t.Eleven), len(t.Twelve), len(t.Thirteen), len(t.Fourteen), len(t.Fifteen), len(t.Sixteen), len(t.Seventeen), len(t.Eighteen), len(t.Nineteen), len(t.Twenty), len(t.TwentyOne), len(t.TwentyTwo)
	b = make([]byte, 22+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17+l18+l19+l20+l21)
	at := jay.WriteStringAt(b, t.One, l0, 0)
	at = jay.WriteStringAt(b[at:], t.Two, l1, at)
	at = jay.WriteStringAt(b[at:], t.Three, l2, at)
	at = jay.WriteStringAt(b[at:], t.Four, l3, at)
	at = jay.WriteStringAt(b[at:], t.Five, l4, at)
	at = jay.WriteStringAt(b[at:], t.Six, l5, at)
	at = jay.WriteStringAt(b[at:], t.Seven, l6, at)
	at = jay.WriteStringAt(b[at:], t.Eight, l7, at)
	at = jay.WriteStringAt(b[at:], t.Nine, l8, at)
	at = jay.WriteStringAt(b[at:], t.Ten, l9, at)
	at = jay.WriteStringAt(b[at:], t.Eleven, l10, at)
	at = jay.WriteStringAt(b[at:], t.Twelve, l11, at)
	at = jay.WriteStringAt(b[at:], t.Thirteen, l12, at)
	at = jay.WriteStringAt(b[at:], t.Fourteen, l13, at)
	at = jay.WriteStringAt(b[at:], t.Fifteen, l14, at)
	at = jay.WriteStringAt(b[at:], t.Sixteen, l15, at)
	at = jay.WriteStringAt(b[at:], t.Seventeen, l16, at)
	at = jay.WriteStringAt(b[at:], t.Eighteen, l17, at)
	at = jay.WriteStringAt(b[at:], t.Nineteen, l18, at)
	at = jay.WriteStringAt(b[at:], t.Twenty, l19, at)
	at = jay.WriteStringAt(b[at:], t.TwentyOne, l20, at)
	jay.WriteString(b[at:], t.TwentyTwo, l21)
	return
}

func (t *TwentyTwo) UnmarshalJ(b []byte) error {
	if len(b) < 22 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	t.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Seven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eight, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Nine, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Ten, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eleven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Twelve, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Thirteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Fourteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Fifteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Sixteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Seventeen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eighteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Nineteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Twenty, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.TwentyOne, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &t.TwentyTwo)
}

func (t *TwentyThree) MarshalJ() (b []byte) {
	l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12, l13, l14, l15, l16, l17, l18, l19, l20, l21, l22 := len(t.One), len(t.Two), len(t.Three), len(t.Four), len(t.Five), len(t.Six), len(t.Seven), len(t.Eight), len(t.Nine), len(t.Ten), len(t.Eleven), len(t.Twelve), len(t.Thirteen), len(t.Fourteen), len(t.Fifteen), len(t.Sixteen), len(t.Seventeen), len(t.Eighteen), len(t.Nineteen), len(t.Twenty), len(t.TwentyOne), len(t.TwentyTwo), len(t.TwentyThree)
	b = make([]byte, 23+l0+l1+l2+l3+l4+l5+l6+l7+l8+l9+l10+l11+l12+l13+l14+l15+l16+l17+l18+l19+l20+l21+l22)
	at := jay.WriteStringAt(b, t.One, l0, 0)
	at = jay.WriteStringAt(b[at:], t.Two, l1, at)
	at = jay.WriteStringAt(b[at:], t.Three, l2, at)
	at = jay.WriteStringAt(b[at:], t.Four, l3, at)
	at = jay.WriteStringAt(b[at:], t.Five, l4, at)
	at = jay.WriteStringAt(b[at:], t.Six, l5, at)
	at = jay.WriteStringAt(b[at:], t.Seven, l6, at)
	at = jay.WriteStringAt(b[at:], t.Eight, l7, at)
	at = jay.WriteStringAt(b[at:], t.Nine, l8, at)
	at = jay.WriteStringAt(b[at:], t.Ten, l9, at)
	at = jay.WriteStringAt(b[at:], t.Eleven, l10, at)
	at = jay.WriteStringAt(b[at:], t.Twelve, l11, at)
	at = jay.WriteStringAt(b[at:], t.Thirteen, l12, at)
	at = jay.WriteStringAt(b[at:], t.Fourteen, l13, at)
	at = jay.WriteStringAt(b[at:], t.Fifteen, l14, at)
	at = jay.WriteStringAt(b[at:], t.Sixteen, l15, at)
	at = jay.WriteStringAt(b[at:], t.Seventeen, l16, at)
	at = jay.WriteStringAt(b[at:], t.Eighteen, l17, at)
	at = jay.WriteStringAt(b[at:], t.Nineteen, l18, at)
	at = jay.WriteStringAt(b[at:], t.Twenty, l19, at)
	at = jay.WriteStringAt(b[at:], t.TwentyOne, l20, at)
	at = jay.WriteStringAt(b[at:], t.TwentyTwo, l21, at)
	jay.WriteString(b[at:], t.TwentyThree, l22)
	return
}

func (t *TwentyThree) UnmarshalJ(b []byte) error {
	if len(b) < 23 {
		return jay.ErrUnexpectedEOB
	}
	var ok bool
	at := 0
	t.One, at, ok = jay.ReadStringAt(b, at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Two, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Three, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Four, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Five, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Six, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Seven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eight, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Nine, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Ten, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eleven, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Twelve, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Thirteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Fourteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Fifteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Sixteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Seventeen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Eighteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Nineteen, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.Twenty, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.TwentyOne, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	t.TwentyTwo, at, ok = jay.ReadStringAt(b[at:], at)
	if !ok {
		return jay.ErrUnexpectedEOB
	}
	return jay.ReadStringPtrErr(b[at:], &t.TwentyThree)
}
