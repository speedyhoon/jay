package jay

import (
	"bytes"
	"errors"
	"fmt"
	"mvdan.cc/gofumpt/format"
	"runtime"
	"strings"
)

const (
	DontEditComment = "// Code generated by Jay; DO NOT EDIT."
	pkgName         = "jay"
	importPrefix    = "github.com/speedyhoon/"
)

var ErrNoneExported = errors.New("no exported struct fields found")

func (s *Struct) GenerateFuncs(b *bytes.Buffer) {
	if len(s.fixedLen) == 0 {
		return
	}

	s.MakeMarshalJ(b)
	s.MakeMarshalJTo(b)
	s.MakeSize(b)
	s.MakeUnmarshal(b)
}

func GenerateFile(pkg string, s []Struct, options Option) ([]byte, error) {
	buf := bytes.NewBuffer(nil)
	for i := range s {
		s[i].GenerateFuncs(buf)
	}

	src := buf.Bytes()
	if len(src) == 0 {
		return nil, ErrNoneExported
	}

	if pkg == "" {
		pkg = "main"
	}

	src = []byte(fmt.Sprintf(`%s
package %s
import "%s%s"
%s`, DontEditComment, pkg, importPrefix, pkgName, src))

	// Nicely format the generated Go code.
	return format.Source(src, format.Options{
		LangVersion: strings.TrimPrefix(runtime.Version(), "go"),
		ExtraRules:  true,
	})
}
